{"version":3,"sources":["helpers/dataCartoons.js","helpers/dataFilms.js","helpers/dataTVSeries.js","panels/Shop.js","App.js","index.js","helpers/index.js","items/index.js","items/StickersAllItem.js"],"names":["dataCartoons","id","name","author","description","tags","price","icon","className","amount","dataFilms","dataTVSeries","Shop","networkStatus","updateConnection","stub","snackbar","useState","activeTab","setActiveTab","slideIndex","setSlideIndex","tab","type","window","scrollTo","renderDataStickersAll","map","item","index","key","separator","onChange","slideWidth","align","style","height","marginTop","display","alignItems","justifyContent","flexDirection","margin","userSelect","marginRight","marginLeft","onClick","length","paddingLeft","paddingRight","size","App","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","setNetworkStatus","setSnackbar","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","addEventListener","e","preventDefault","navigator","onLine","go","currentTarget","dataset","to","console","log","isWebView","tabbar","data-to","text","fill","textDiv","retryFunction","textButton","openAlert","backgroundColor","duration","layout","onClose","before","width","ReactDOM","render","getElementById","StickersAllItem","marginBottom","padding","href","target","color","borderRadius"],"mappings":"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","file":"static/js/main.37bac6d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Div } from \"@vkontakte/vkui\";\r\n\r\nconst dataCartoons = [\r\n  {\r\n    id: 1,\r\n    name: \"ДУРКА\",\r\n    author: \"Дмитрий Дмитриев\",\r\n    description: \"Этот пак о ДУРКЕ и о том что она делает с людьми в ДУРКЕ\",\r\n    tags: \"cartoons\",\r\n    price: 39,\r\n    icon: <Div className=\"iconDurka\" />,\r\n    amount: 22\r\n  },\r\n];\r\n\r\nexport { dataCartoons };\r\n","import React from \"react\";\r\nimport { Div } from \"@vkontakte/vkui\";\r\n\r\nconst dataFilms = [\r\n  {\r\n    id: 2,\r\n    name: \"Джокер\",\r\n    author: \"Антон Антонов\",\r\n    description: \"Этот пак о Джокере\",\r\n    tags: \"films\",\r\n    price: 39,\r\n    icon: <Div className=\"iconJoker\" />,\r\n    amount: 10\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Фильмы\",\r\n    author: \"Сергей Сергеев\",\r\n    description: \"Этот пак о персонажах из разных фильмов\",\r\n    tags: \"films\",\r\n    price: 39,\r\n    icon: <Div className=\"iconFilms\" />,\r\n    amount: 16\r\n  }\r\n];\r\n\r\nexport { dataFilms };\r\n","import React from \"react\";\r\nimport { Div } from \"@vkontakte/vkui\";\r\n\r\nconst dataTVSeries = [\r\n  {\r\n    id: 4,\r\n    name: \"Малибу\",\r\n    author: \"Сергей Сергеев\",\r\n    description: \"Этот пак о девушке из сериала Малибу\",\r\n    tags: \"TVSeries\",\r\n    price: 39,\r\n    icon: <Div className=\"iconMalibu\" />,\r\n    amount: 10\r\n  },\r\n];\r\n\r\nexport { dataTVSeries };\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { StickersAllItem } from \"../items\";\r\nimport { dataAnime,  dataCartoons, dataFilms, dataGames, dataTVSeries} from \"../helpers\";\r\n\r\n\r\nconst Shop = ({ id, networkStatus, updateConnection, stub, snackbar }) => {\r\n  let dataStickersAll = [];\r\n  const [activeTab, setActiveTab] = useState(\"all-stickers\");\r\n  const [slideIndex, setSlideIndex] = useState(1);\r\n\r\n  dataStickersAll = [\r\n    ...dataCartoons,\r\n    ...dataFilms,\r\n    ...dataTVSeries,\r\n  ];\r\n\r\n\r\n  function tab(type) {\r\n    switch (type) {\r\n      case \"all-stickers\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"games\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"anime\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"cartoons\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"films\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"tv-series\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const renderDataStickersAll = dataStickersAll.map((item, index) => {\r\n    return (\r\n      <StickersAllItem\r\n        key={index}\r\n        id={index + 1}\r\n        name={item.name}\r\n        author={item.author}\r\n        description={item.description}\r\n        price={item.price}\r\n        icon={item.icon}\r\n        amount={item.amount}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      <PanelHeaderSimple>VIP Стикеры</PanelHeaderSimple>\r\n\r\n\r\n      <Gallery\r\n        // timeout=\"2000\"\r\n        slideIndex={slideIndex}\r\n        onChange={(slideIndex) => setSlideIndex(slideIndex)}\r\n        slideWidth=\"80%\"\r\n        align=\"center\"\r\n        style={{\r\n          height: \"220px\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <Div className=\"iconSliderNaruto\"></Div>\r\n        <Div className=\"iconSliderGravityFalls\"></Div>\r\n        <Div className=\"iconSliderMinecraft\"></Div>\r\n      </Gallery>\r\n\r\n      <>\r\n        <HorizontalScroll>\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              flexDirection: \"row\",\r\n              margin: 10,\r\n              userSelect: \"none\",\r\n              marginRight: 10,\r\n              marginLeft: 10\r\n            }}\r\n          >\r\n            <Div\r\n              onClick={() => tab(\"all-stickers\")}\r\n              className={activeTab === \"all-stickers\" ? \"tabGreen\" : \"tabWhite\"}\r\n\r\n            >\r\n              Все\r\n            </Div>\r\n            <Div\r\n              onClick={() => tab(\"anime\")}\r\n              className={activeTab === \"anime\" ? \"tabGreen\" : \"tabWhite\"}\r\n            >\r\n              Аниме\r\n            </Div>\r\n            <Div\r\n              onClick={() => tab(\"games\")}\r\n              className={activeTab === \"games\" ? \"tabGreen\" : \"tabWhite\"}\r\n            >\r\n              Игры\r\n            </Div>\r\n            <Div\r\n              onClick={() => tab(\"cartoons\")}\r\n              className={activeTab === \"cartoons\" ? \"tabGreen\" : \"tabWhite\"}\r\n            >\r\n              Мультики\r\n            </Div>\r\n            <Div\r\n              onClick={() => tab(\"films\")}\r\n              className={activeTab === \"films\" ? \"tabGreen\" : \"tabWhite\"}\r\n            >\r\n              Фильмы\r\n            </Div>\r\n            <Div\r\n              onClick={() => tab(\"tv-series\")}\r\n              className={activeTab === \"tv-series\" ? \"tabGreen\" : \"tabWhite\"}\r\n            >\r\n              Сериалы\r\n            </Div>\r\n          </Div>\r\n        </HorizontalScroll>\r\n        {networkStatus ? (\r\n          stub(\r\n            \"Отсутствует интернет - соединение!\",\r\n            updateConnection,\r\n            \"Повторить\"\r\n          )\r\n        ) : (\r\n          <>\r\n            <>\r\n              {activeTab === \"all-stickers\" ? (\r\n                <>\r\n                  <Div>\r\n                    <>\r\n                      {!renderDataStickersAll.length ? (\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            flexDirection: \"column\",\r\n                          }}\r\n                        >\r\n                          <Spinner size=\"large\" style={{ marginTop: 90 }} />\r\n                        </div>\r\n                      ) : (\r\n                        <Div\r\n                          style={{\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10,\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          {renderDataStickersAll}\r\n                        </Div>\r\n                      )}\r\n                    </>\r\n                  </Div>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {activeTab === \"cartoons\" ? (\r\n                <>\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    {/* <ExchangeSell\r\n                          durkaCoins={formatCoins(durkaCoins)}\r\n                          course={course}\r\n                          addExchangeOffer={addExchangeOffer}\r\n                          onChangeAction={onChangeAction}\r\n                          costOneDC={costOneDC}\r\n                          inputDurkaCoins={inputDurkaCoins}\r\n                          qiwiAccount={qiwiAccount}\r\n                        /> */}\r\n                    ТЕСТ\r\n                  </Div>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </>\r\n\r\n            {snackbar}\r\n          </>\r\n        )}\r\n      </>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { Shop };\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  View,\n  ScreenSpinner,\n  ConfigProvider,\n  ActionSheetItem,\n  Avatar,\n  Snackbar,\n  CellButton,\n  Div,\n  Epic,\n  Tabbar,\n  TabbarItem,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Icon28Favorite from \"@vkontakte/icons/dist/28/favorite\";\nimport Icon28MarketOutline from \"@vkontakte/icons/dist/28/market_outline\";\nimport Icon16Done from \"@vkontakte/icons/dist/16/done\";\nimport Icon16Cancel from \"@vkontakte/icons/dist/16/cancel\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/panels.sass\";\nimport \"./styles/components.sass\";\nimport \"./styles/icons.sass\";\n\nimport {Shop, Profile} from \"./panels\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"shop\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\tconst [networkStatus, setNetworkStatus] = useState(false);\n\tconst [snackbar, setSnackbar] = useState(null);\n\t\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"bright_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n\t\tfetchData();\n\t\t\n\t\twindow.addEventListener(\"popstate\", (e) => e.preventDefault() & menu(e));\n\n  }, []);\n\n\tuseEffect(() => {\n    let navigator = window.navigator.onLine;\n    if (!navigator) {\n      setNetworkStatus(true);\n    } else {\n      setNetworkStatus(false);\n    }\n  }, [networkStatus]);\n\n\n  function updateConnection() {\n    if (!navigator) {\n      setNetworkStatus(true);\n    } else {\n      setNetworkStatus(false);\n    }\n  }\n\n  function menu(e) {\n    setActivePanel(\"shop\");\n  }\n\n  function openAlert(text, backgroundColor = \"green\") {\n    if (snackbar) return;\n    setSnackbar(\n      <Snackbar\n        duration=\"7000\"\n        layout=\"horizontal\"\n        onClose={() => setSnackbar(null)}\n        before={\n          <Avatar size={24} style={{ backgroundColor }}>\n            {backgroundColor === \"green\" ? (\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            ) : (\n              <Icon16Cancel fill=\"#fff\" width={14} height={14} />\n            )}\n          </Avatar>\n        }\n      >\n        {text}\n      </Snackbar>\n    );\n  }\n\n  const go = (e) => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\tconsole.log(\"123\");\n\t\t\n\t};\n\t\n  const stub = (textDiv, retryFunction, textButton) => {\n    return (\n      <Div className=\"divSpinner\">\n        <Div className=\"div\">{textDiv}</Div>\n        <Div className=\"div\">\n          <CellButton onClick={retryFunction}>{textButton}</CellButton>\n        </Div>\n      </Div>\n    );\n  };\n\n\n\n\n  return (\n    <ConfigProvider isWebView={true} >\n      <Epic\n        tabbar={\n          <Tabbar>\n            <TabbarItem onClick={go} data-to=\"shop\" text=\"Стикеры\">\n              {activePanel === \"shop\" ? (\n                <Icon28Favorite fill=\"green\" />\n              ) : (\n                <Icon28Favorite />\n              )}\n            </TabbarItem>\n\n            {fetchedUser && (\n              <>\n                {fetchedUser.id === 73606509 ||\n                fetchedUser.id === 236908027 ||\n                fetchedUser.id === 457421325 ? (\n                  <TabbarItem onClick={go} data-to=\"profile\" text=\"Профиль\">\n                    {activePanel === \"profile\" ? (\n                      <Icon28MarketOutline fill=\"green\" />\n                    ) : (\n                      <Icon28MarketOutline />\n                    )}\n                  </TabbarItem>\n                ) : (\n                  \"\"\n                )}\n              </>\n            )}\n          </Tabbar>\n        }\n      >\n        <View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Shop \n\t\t\t\t\tid=\"shop\" \n\t\t\t\t\tfetchedUser={fetchedUser} \n\t\t\t\t\tgo={go}\n\t\t\t\t\tnetworkStatus={networkStatus} \n\t\t\t\t\tupdateConnection={updateConnection}\n\t\t\t\t\tstub={stub}\n\t\t\t\t\topenAlert={openAlert}\n\t\t\t\t\tsnackbar={snackbar}\n\t\t\t\t\t/>\n          {/* <Profile id=\"profile\" go={go} /> */}\n        </View>\n      </Epic>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","export * from \"./requestMethod\";\r\nexport * from \"./dataAnime\";\r\nexport * from \"./dataCartoons\";\r\nexport * from \"./dataFilms\";\r\nexport * from \"./dataGames\";\r\nexport * from \"./dataTVSeries\";\r\n","export * from './SliderItem';\r\nexport * from './StickersAllItem';","import React from \"react\";\r\nimport { SimpleCell, Button, Div, Link } from \"@vkontakte/vkui\";\r\n\r\nconst StickersAllItem = ({\r\n  id,\r\n  name,\r\n  price,\r\n  icon,\r\n  author,\r\n  description,\r\n  amount,\r\n}) => {\r\n  return (\r\n    <SimpleCell\r\n      className=\"myItem\"\r\n      before={icon}\r\n      // after={\r\n      //   <Link id={id} mode=\"tertiary\">\r\n      //     купить\r\n      //   </Link>\r\n      // }\r\n      description={\r\n        <Div className=\"div\">\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"start\",\r\n              marginTop: 5,\r\n              marginBottom: 5,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Link href={\"https://vk.com/kirill_1131\"} target=\"_blank\">\r\n              {author}\r\n            </Link>\r\n          </Div>\r\n          <Button\r\n            size=\"m\"\r\n            onClick={null}\r\n            style={{\r\n              backgroundColor: \"green\",\r\n              color: \"white\",\r\n              borderRadius: \"6px\",\r\n              width: \"120px\",\r\n            }}\r\n          >\r\n            Купить за {price} ₽\r\n          </Button>\r\n        </Div>\r\n      }\r\n    >\r\n      {name}\r\n    </SimpleCell>\r\n  );\r\n};\r\n\r\nexport { StickersAllItem };\r\n"],"sourceRoot":""}