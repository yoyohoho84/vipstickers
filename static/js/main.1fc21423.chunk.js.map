{"version":3,"sources":["panels/Shop.js","components/Form.js","components/Statistics.js","components/StatisticsGroups.js","components/StickerPackIcon.js","panels/Profile.js","panels/GroupInfoStatistic.js","helpers/requestMethod.js","helpers/SocketManager.js","helpers/dataSlider.js","items/SliderItem.js","items/StickersAllItem.js","items/OperationsHistoryItem.js","items/GroupItem.js","items/StickersItem.js","components/index.js","App.js","index.js","panels/index.js","modals/ModalStickers.js","modals/ModalWithdrawMoney.js"],"names":["callMethod","SocketManager","Shop","id","stub","snackbar","setActiveModal","openPaymentSystem","qiwiPay","connectTwoDevices","socketReconnect","AddToCommunity","isConnected","useState","activeTab","setActiveTab","slideIndex","setSlideIndex","dataStickers","setDataStickers","openModalStickers","find","stickers","name","author","description","tags","price","icon","stickersCount","tab","type","window","scrollTo","getAllStickers","then","message","console","log","useEffect","renderDataStickersAll","map","item","index","key","authorId","authorName","amount","renderSliderItem","dataSlider","className","separator","left","style","display","alignItems","justifyContent","flexDirection","onClick","backgroundColor","borderRadius","marginLeft","fontSize","height","width","color","userSelect","mode","size","href","target","onChange","slideWidth","align","marginTop","margin","Form","phoneNumber","onChangePhoneNumber","editStatus","editPhoneNumber","marginBottom","flexGrow","value","e","disabled","fill","stretched","whiteSpace","Statistics","onChangeAction","openModalWithdrawMoney","groupName","setGroupName","amountToday","setAmountToday","amountAllTime","setAmountAllTime","donations","setDonations","groupBalance","setGroupBalance","getStats","formatDate","date","dd","Date","getDate","mm","getMonth","yy","getFullYear","hh","getHours","minutes","getMinutes","renderHistory","senderUrl","userId","senderPhoto","userPhotoURL","createdAt","length","StatisticsGroups","go","groups","setGroups","renderGroups","groupUrl","groupId","profitToday","profitAllTime","photo","groupPhotoURL","StickerPackIcon","src","marginRight","Profile","networkStatus","openAlert","isSuperAdmin","withdrawalAmount","setPhoneNumber","setEditStatus","trim","withdrawal","status","vertical","filled","selected","qiwiAccount","GroupInfoStatistic","data-to","socket","close","io","path","query","document","location","search","slice","reconnectionAttempts","transports","methodName","params","Promise","resolve","emit","answer","SliderItem","StickersAllItem","fetchedUser","before","padding","OperationsHistoryItem","senderName","asideContent","paddingLeft","GroupItem","StickersItem","paddingRight","createConnection","App","setIsConnected","isAdmin","setIsAdmin","setIsSuperAdmin","activePanel","setActivePanel","setUser","popout","setPopout","setSnackbar","activeModal","setConnectTwoDevices","open","text","duration","layout","onClose","bridge","subscribe","detail","schemeAttribute","createAttribute","data","scheme","body","attributes","setNamedItem","send","user","addEventListener","preventDefault","URLSearchParams","has","get","includes","on","textDiv","retryFunction","textButton","currentTarget","dataset","to","isWebView","tabbar","modal","autoclose","sendPromise","app_id","action","group_id","catch","error","payVkPay","packId","res","QiwiCheckout","createInvoice","publicKey","comment","response","err","ReactDOM","render","getElementById","ModalStickers","targetId","header","caption","ModalWithdrawMoney","top","placeholder","actions","title"],"mappings":"iNAuBQA,EAAeC,IAAfD,WAEFE,EAAO,SAAC,GAWP,IAVLC,EAUI,EAVJA,GACAC,EASI,EATJA,KACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,kBACAC,EAKI,EALJA,QACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,YACI,EAI8BC,mBAAS,gBAJvC,mBAIGC,EAJH,KAIcC,EAJd,OAKgCF,mBAAS,GALzC,mBAKGG,EALH,KAKeC,EALf,OAMoCJ,mBAAS,IAN7C,mBAMGK,EANH,KAMiBC,EANjB,KAeJ,SAASC,EAAkBjB,GAAI,MAYzBe,EAAaG,MAAK,SAACC,GAAD,OAAcA,EAASnB,MAAQA,KAPnDoB,EAL2B,EAK3BA,KACAC,EAN2B,EAM3BA,OACAC,EAP2B,EAO3BA,YACAC,EAR2B,EAQ3BA,KACAC,EAT2B,EAS3BA,MACAC,EAV2B,EAU3BA,KACAC,EAX2B,EAW3BA,cAGFvB,EACE,kBAAC,IAAD,CACEiB,KAAMA,EACNI,MAAOA,EACPC,KAAMA,EACNJ,OAAQA,EACRC,YAAaA,EACbC,KAAMA,EACNG,cAAeA,EACfvB,eAAgBA,EAChBC,kBAAmBA,KAKzB,SAASuB,EAAIC,GACXhB,EAAagB,GACbC,OAAOC,SAAS,EAAG,GAEnBC,EAAwB,iBAATH,EAA0B,GAAK,CAACA,IAGjD,SAASG,IAA2B,IAAZR,EAAW,uDAAJ,GAC7B,OAAO1B,EAAW,kBAAmB,CACnC0B,SACCS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACTjB,EAAgBiB,GAEhBC,QAAQC,IAAI,yBAA0BF,GACtCC,QAAQC,IAAI,8BAA+BpB,MA/C/CqB,qBAAU,WACRL,MACC,IAiDH,IAAMM,EAAwBtB,EAAauB,KAAI,SAACC,EAAMC,GACpD,OACE,kBAAC,IAAD,CACEC,IAAKD,EACLxC,GAAIuC,EAAKvC,GACToB,KAAMmB,EAAKnB,KACXsB,SAAUH,EAAKG,SACfC,WAAYJ,EAAKI,WACjBrB,YAAaiB,EAAKjB,YAClBE,MAAOe,EAAKf,MACZC,KAAMc,EAAKd,KACXmB,OAAQL,EAAKK,OACb3B,kBAAmBA,EACnBZ,QAASA,OAKTwC,EAAmBC,IAAWR,KAAI,SAACC,EAAMC,GAC7C,OACE,kBAAC,IAAD,CACEC,IAAKD,EACLxC,GAAIuC,EAAKvC,GACT+C,UAAWR,EAAKQ,UAChB9B,kBAAmBA,OAKzB,OACE,kBAAC,IAAD,CAAOjB,GAAIA,EAAIgD,WAAW,GACvB1C,EACCL,EACE,yJACAM,EACA,oGAGF,oCACIE,EAGA,oCACE,kBAAC,IAAD,CACEwC,KACE,kBAAC,IAAD,CACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,QAGjB,kBAAC,IAAD,CACEC,QAAS/C,EACT0C,MAAO,CACLM,gBAAiB,QACjBC,aAAc,MACdC,WAAY,OACZC,SAAU,OACVC,OAAQ,OACRC,MAAO,QACPC,MAAO,QACPX,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBU,WAAY,SAbhB,gGAuCA,kBAAC,IAAD,CACEb,MAAO,CACLM,gBAAiB,UACjBC,aAAc,MACdC,WAAY,OACZG,MAAO,OACPD,OAAQ,QAEVI,KAAK,UACLC,KAAK,IAELC,KAAK,4BACLC,OAAO,UAZT,iDAiDN,kBAAC,IAAD,CAEEtD,WAAYA,EACZuD,SAAU,SAACvD,GAAD,OAAgBC,EAAcD,IACxCwD,WAAW,QACXC,MAAM,SACNpB,MAAO,CACLU,OAAQ,QACRW,UAAW,SAGZ1B,GAEH,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBC,cAAe,MACfkB,OAAQ,GACRT,WAAY,SAKd,kBAAC,IAAD,CACER,QAAS,kBAAM5B,EAAI,iBACnBoB,UACgB,iBAAdpC,EAA+B,WAAa,YAHhD,sBAQA,kBAAC,IAAD,CACE4C,QAAS,kBAAM5B,EAAI,UACnBoB,UACgB,UAAdpC,EAAwB,WAAa,YAHzC,kCAQA,kBAAC,IAAD,CACE4C,QAAS,kBAAM5B,EAAI,UACnBoB,UACgB,UAAdpC,EAAwB,WAAa,YAHzC,4BAQA,kBAAC,IAAD,CACE4C,QAAS,kBAAM5B,EAAI,aACnBoB,UACgB,aAAdpC,EAA2B,WAAa,YAH5C,oDAQA,kBAAC,IAAD,CACE4C,QAAS,kBAAM5B,EAAI,UACnBoB,UACgB,UAAdpC,EAAwB,WAAa,YAHzC,wCAQA,kBAAC,IAAD,CACE4C,QAAS,kBAAM5B,EAAI,cACnBoB,UACgB,cAAdpC,EAA4B,WAAa,YAH7C,iDAYN,oCACiB,iBAAdA,EAEC,kBAAC,IAAD,KAAM0B,GAEN,GAGa,UAAd1B,EACC,kBAAC,IAAD,CAAc0B,sBAAuBA,IAErC,GASa,aAAd1B,EACC,kBAAC,IAAD,CAAc0B,sBAAuBA,IAErC,GAGa,UAAd1B,EACC,kBAAC,IAAD,CAAc0B,sBAAuBA,IAErC,GAGa,cAAd1B,EACC,kBAAC,IAAD,CAAc0B,sBAAuBA,IAErC,GAGDnC,IA1NLD,EAAK,wHAA0BM,EAAiB,8D,iCC1I5D,8EAkBMkE,EAAO,SAAC,GAMP,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,gBAGA,OACE,kBAAC,IAAD,CACE3B,MAAO,CACLsB,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEtB,MAAO,CACL4B,aAAc,EACdP,UAAW,IAGb,kBAAC,IAAD,CACErB,MAAO,CACL4B,aAAc,EACdP,UAAW,IAHf,mIASA,kBAAC,IAAD,CACErB,MAAO,CACLC,QAAS,OACTC,WAAY,SACZE,cAAe,QAIjB,kBAAC,IAAD,CACAJ,MAAO,CACL6B,SAAU,KAEV,kBAAC,IAAD,CACAC,MAAON,EACPN,SAAU,SAACa,GAAD,OAAON,EAAoBM,IACrCrD,KAAK,OACLsD,UAAUN,KAKZ,kBAAC,IAAD,CACC1B,MAAO,CACN6B,SAAU,GACVrB,WAAY,KAGZ,kBAAC,IAAD,CACAyB,KAAK,QACL5B,QAAS,kBAAMsB,EAAgB,cAMrC,kBAAC,IAAD,CACE3B,MAAO,CACL4B,aAAc,EACdP,UAAW,KAGb,kBAAC,IAAD,CAAOvB,UAAU,QACf,kBAAC,IAAD,CACEE,MAAO,CAAEM,gBAAiB,QAASM,MAAO,SAC1CP,QAAS,kBAAMsB,EAAgB,SAC/Bb,KAAK,WACLC,KAAK,KACLmB,WAAS,GALX,2DAWF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACElC,MAAO,CACLqB,UAAW,GACXpB,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACf+B,WAAY,aAPhB,yQ,0IC/ENxF,E,MAAeC,EAAfD,WAEFyF,EAAa,SAAC,GAA8C,EAA5CC,eAA6C,IAA7BC,EAA4B,EAA5BA,uBAA4B,EAC9B9E,mBAAS,IADqB,mBACzD+E,EADyD,KAC9CC,EAD8C,OAE1BhF,mBAAS,GAFiB,mBAEzDiF,EAFyD,KAE5CC,EAF4C,OAGtBlF,mBAAS,GAHa,mBAGzDmF,EAHyD,KAG1CC,EAH0C,OAI9BpF,mBAAS,IAJqB,mBAIzDqF,EAJyD,KAI9CC,EAJ8C,OAKxBtF,mBAAS,GALe,mBAKzDuF,EALyD,KAK3CC,EAL2C,OAMhBxF,mBAAS,GANO,6BAahE,SAASyF,IACPtG,EAAW,oBAAoBmC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACrCC,QAAQC,IAAI,mBAAoBF,GAChCC,QAAQC,IAAI,oBAAqBF,EAAQwD,WAEzCC,EAAazD,EAAQwD,WACrBG,EAAe3D,EAAQ0D,aACvBG,EAAiB7D,EAAQ4D,eACzBG,EAAa/D,EAAQ8D,WACrBG,EAAgBjE,EAAQgE,iBAM5B,SAASG,EAAWC,GAGlB,IAAIC,GAFJD,EAAO,IAAIE,KAAY,IAAPF,IAEFG,UACVF,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIG,EAAKJ,EAAKK,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKN,EAAKO,cAAgB,IAC1BD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKR,EAAKS,WACVD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAUV,EAAKW,aAGnB,OAFID,EAAU,KAAIA,EAAU,IAAMA,GAE3BT,EAAK,IAAMG,EAAK,IAAME,EAAK,IAAME,EAAK,IAAME,EAjCrD3E,qBAAU,WACR+D,MACC,IAkCH,IAAMc,EAAgBlB,EAAUzD,KAAI,SAACC,EAAMC,GACzC,IAAM0E,EAAY,oBAAsB3E,EAAK4E,OAE7C,OACE,kBAAC,IAAD,CACE1E,IAAKD,EACLxC,GAAIwC,EAAQ,EACZ0E,UAAWA,EACXtE,OAAQL,EAAKK,OACbwE,YAAa7E,EAAK8E,aAClBC,UAAW/E,EAAK+E,UAChBlB,WAAYA,OAKlB,OACE,oCACIa,EAAcM,OAKd,kBAAC,IAAD,CACErE,MAAO,CACLsB,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxB,UAAU,QACf,kBAAC,IAAD,CACEE,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,mHASA,kBAAC,IAAD,CACER,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAGb+B,IAGL,kBAAC,IAAD,CAAOzC,UAAU,QACf,kBAAC,IAAD,CACEE,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,4DAOeiC,EAPf,uBASA,kBAAC,IAAD,CACEzC,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,mEAOiBmC,EAPjB,uBASA,kBAAC,IAAD,CACE3C,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,yCAOWuC,EAPX,uBAUA,kBAAC,IAAD,CACE/C,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,QAChBC,cAAe,QAGjB,kBAAC,IAAD,CACEW,KAAK,IACLV,QAAS4C,EACTjD,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,GACZF,gBAAiB,QACjBM,MAAO,QACPL,aAAc,MACdI,MAAO,UAVX,yFAeA,kBAAC,IAAD,CACEI,KAAK,IACLV,QAASiC,EACTtC,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,GACZF,gBAAiB,UACjBM,MAAO,QACPL,aAAc,MACdI,MAAO,UAVX,gDAkBHoD,KArGP,yBAAKlE,UAAU,WACb,kBAAC,IAAD,CAASkB,KAAK,QAAQf,MAAO,CAAEqB,UAAW,U,sHCrE5C1E,E,MAAeC,EAAfD,WAEF2H,EAAmB,SAAC,GAAY,IAAVC,EAAS,EAATA,GAAS,EACuB/G,mBAAS,IADhC,gCAEGA,mBAAS,IAFZ,mBAE5BiF,EAF4B,KAEfC,EAFe,OAGOlF,mBAAS,GAHhB,mBAG5BmF,EAH4B,KAGbC,EAHa,OAIPpF,mBAAS,IAJF,mBAI5BgH,EAJ4B,KAIpBC,EAJoB,KAMnC,SAASxB,IACPtG,EAAW,qBAAqBmC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACtC2D,EAAe3D,EAAQ0D,aACvBG,EAAiB7D,EAAQ4D,eACzB8B,EAAU1F,EAAQyF,WAQtB,SAAStB,EAAWC,GAGlB,IAAIC,GAFJD,EAAO,IAAIE,KAAY,IAAPF,IAEFG,UACVF,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIG,EAAKJ,EAAKK,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKN,EAAKO,cAAgB,IAC1BD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKR,EAAKS,WACVD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAUV,EAAKW,aAGnB,OAFID,EAAU,KAAIA,EAAU,IAAMA,GAE5B,GAAN,OAAUT,EAAV,YAAgBG,EAAhB,YAAsBE,EAAtB,YAA4BE,EAA5B,YAAkCE,GAlBpC3E,qBAAU,WACR+D,MACC,IAmBH,IAAMyB,EAAeF,EAAOpF,KAAI,SAACC,EAAMC,GACrC,IAAMqF,EAAW,sBAAwBtF,EAAKuF,QAE9C,OACE,kBAAC,IAAD,CACErF,IAAKD,EACLxC,GAAIwC,EAAQ,EACZiF,GAAIA,EACJI,SAAUA,EACVC,QAASvF,EAAKuF,QACdC,YAAaxF,EAAKoD,YAClBqC,cAAezF,EAAKsD,cACpBzE,KAAMmB,EAAKkD,UACXwC,MAAO1F,EAAK2F,cACZ9B,WAAYA,EACZL,UAAWxD,EAAKwD,eAKtB,OACE,kBAAC,IAAD,CACE7C,MAAO,CACLsB,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxB,UAAU,QACf,kBAAC,IAAD,CACEE,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,mJAUF,kBAAC,IAAD,CAAOV,UAAU,QACf,kBAAC,IAAD,CACEE,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,4DAOeiC,EAPf,uBASA,kBAAC,IAAD,CACEzC,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,KAJhB,mEAOiBmC,EAPjB,uBAUA,kBAAC,IAAD,CACE5B,KAAK,IACLV,QAAS4C,EACTjD,MAAO,CACL4B,aAAc,EACdP,UAAW,EACXb,WAAY,GACZF,gBAAiB,QACjBM,MAAO,QACPL,aAAc,MACdI,MAAO,UAVX,0FAiBF,kBAAC,IAAD,KAAM+D,Q,iCCtIhB,sDAEMO,EAAkB,SAAC,GAAc,IAAZ1G,EAAW,EAAXA,KACvB,OACI,yBACI2G,IAAK3G,EACLoC,MAAO,GACPD,OAAQ,GACRV,MAAO,CACHqB,UAAW,GACX8D,YAAa,GACbvD,aAAc,Q,8ICWtBjF,EAAeC,IAAfD,WAEFyI,EAAU,SAAC,GAYV,IAXLtI,EAWI,EAXJA,GACAyH,EAUI,EAVJA,GAEAxH,GAQI,EATJsI,cASI,EARJtI,MACAC,EAOI,EAPJA,SACAsI,EAMI,EANJA,UACAlI,EAKI,EALJA,kBACAC,EAII,EAJJA,gBACAkI,EAGI,EAHJA,aACAtI,EAEI,EAFJA,eACAM,EACI,EADJA,YAGIiI,EAAmB,EAFnB,EAI8BhI,mBAAS,QAJvC,mBAIGC,EAJH,KAIcC,EAJd,OAKkCF,mBAAS,MAL3C,mBAKGgE,EALH,KAKgBiE,EALhB,OAMgCjI,oBAAS,GANzC,mBAMGkE,EANH,KAMegE,EANf,KAYJ,SAASjH,EAAIC,GACX,OAAQA,GACN,IAAK,OAIL,IAAK,aAIL,IAAK,oBACHhB,EAAagB,GACbC,OAAOC,SAAS,EAAG,IAezB,SAASyD,EAAeN,EAAGrD,GACzB,IAAMoD,GAASC,EAAEd,OAAOa,MAAM6D,OAE9B,OAAQjH,GACN,IAAK,mBACHM,QAAQC,IAAI6C,GACZ0D,EAAmB1D,GAKzB,SAAS8D,IACPjJ,EAAW,aAAc,CACvB+C,OAAQ8F,IACP1G,MAAK,YAA0B,IAAvBC,EAAsB,EAAtBA,QAAS8G,EAAa,EAAbA,OAClB5I,EAAe,MACfqI,EAAUvG,EAAoB,WAAX8G,EAAsB,MAAQ,YA/CrD3G,qBAAU,WAsBRvC,EAAW,kBAAkBmC,MAAK,YAA0B,IAAvB+G,EAAsB,EAAtBA,OAAQ9G,EAAc,EAAdA,QAC5B,YAAX8G,EACFJ,EAAe1G,GAEfuG,EAAUvG,EAAS,YAxBtB,IAkFH,OACE,kBAAC,IAAD,CAAOjC,GAAIA,EAAIgD,WAAW,GACxB,kBAAC,IAAD,uDAcC1C,EACCL,EACE,yJACAM,EACA,oGAGF,oCACIE,EAGA,oCACE,kBAAC,IAAD,CAAauI,SAAS,MAAMC,QAAQ,GAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1F,QAAS,kBAAM5B,EAAI,SACnBuH,SAAwB,SAAdvI,GAFZ,8CAMA,kBAAC,IAAD,CACE4C,QAAS,kBAAM5B,EAAI,eACnBuH,SAAwB,eAAdvI,GAFZ,gEAOC8H,EACC,kBAAC,IAAD,CACElF,QAAS,kBAAM5B,EAAI,sBACnBuH,SAAwB,sBAAdvI,GAFZ,2DAOA,KAIN,oCACiB,SAAdA,EACC,kBAAC,IAAD,CACEuC,MAAO,CACLqB,UAAW,KAGb,kBAAC,OAAD,CACEG,YAAaA,EACbC,oBAvFpB,SAA6BM,GAC3B,IAAMD,EAAQC,EAAEd,OAAOa,MAAM6D,OAE7BF,EAAe3D,GACf9C,QAAQC,IAAI,cAAeuC,IAoFTE,WAAYA,EACZC,gBAlFI,SAACjD,GACvB,OAAQA,GACN,IAAK,OACHgH,GAAc,GACd,MACF,IAAK,OACHA,GAAc,GACd/I,EAAW,oBAAqB,CAC9BsJ,YAAazE,IACZ1C,MAAK,YAA0B,IAAvBC,EAAsB,EAAtBA,QAAS8G,EAAa,EAAbA,OAClBP,EAAUvG,EAAoB,WAAX8G,EAAsB,MAAQ,iBA4EzC,GAGa,eAAdpI,EACC,kBAAC,IAAD,CACEuC,MAAO,CACLqB,UAAW,KAGb,kBAAC,aAAD,CACEgB,eAAgBA,EAChBC,uBAlHpB,WACErF,EACE,kBAAC,IAAD,CACEoF,eAAgBA,EAChBpF,eAAgBA,EAChB2I,WAAYA,SAiHF,GAGa,sBAAdnI,EACC,kBAAC,IAAD,CACEuC,MAAO,CACLqB,UAAW,KAGb,kBAAC,mBAAD,CAAkBkD,GAAIA,KAGxB,IAIHvH,GA5EHD,EAAK,wHAA0BM,EAAiB,8D,iCCzJ5D,6EAoBM6I,EAAqB,SAAC,GAQrB,IAPLpJ,EAOI,EAPJA,GACAyH,EAMI,EANJA,GACAxH,EAKI,EALJA,KACAC,EAII,EAJJA,SAEAI,GAEI,EAHJkI,UAGI,EAFJlI,mBACAC,EACI,EADJA,gBAEA,OACE,kBAAC,IAAD,CAAOP,GAAIA,EAAIgD,WAAW,GACxB,kBAAC,IAAD,CACAC,KACE,kBAAC,IAAD,CAAiBM,QAASkE,EAAI4B,UAAQ,aAFxC,kHAQA,oCACC/I,EACKL,EACE,yJACAM,EACA,oGAGJ,oCACE,kBAAC,IAAD,KACE,kBAAC,aAAD,OAGDL,O,8JCpDN,I,6DCOMJ,EAAb,iDACIwJ,OAAS,KADb,oEAkBQ,OAXIxJ,EAAcwJ,QACdxJ,EAAcwJ,OAAOC,QAGzBzJ,EAAcwJ,OAASE,IAAG,8BAA+B,CACrDC,KAAM,mBACNC,MAAOC,SAASC,SAASC,OAAOC,MAAM,GACtCC,qBAAsB,EACtBC,WAAY,CAAC,eAGVlK,EAAcwJ,SAlB7B,0EA0B4BW,GA1B5B,wFA0BwCC,EA1BxC,+BA0BiD,GACjCZ,EAAWxJ,EAAXwJ,OA3BhB,yCA8BmBa,QAAQC,QAAQ,CACnBrB,OAAQ,SACR9G,QAAS,wGAhCzB,gCAmCe,IAAIkI,SAAQ,SAACC,GAChBd,EAAOe,KAAKJ,EAAYC,GAAQ,SAACI,GAC7B,OAAOF,EAAQE,UArC/B,yGCLMxH,EAAa,CACjB,CACE9C,GAAI,EACJ+C,UAAW,oBAEb,CACE/C,GAAI,EACJ+C,UAAW,sBAEb,CACE/C,GAAI,EACJ+C,UAAW,mBAEb,CACE/C,GAAI,EACJ+C,UAAW,iBAEb,CACE/C,GAAI,EACJ+C,UAAW,sB,qOChBTwH,EAAa,SAAC,GAIb,IAHPvK,EAGM,EAHNA,GACAiB,EAEM,EAFNA,kBACA8B,EACM,EADNA,UAEE,OACE,kBAAC,IAAD,CACA/C,GAAIA,EACJuD,QAAS,kBAAMtC,EAAkBjB,IACjC+C,UAAWA,K,QCTTyH,EAAkB,SAAC,GAalB,IAZLxK,EAYI,EAZJA,GACAoB,EAWI,EAXJA,KACAI,EAUI,EAVJA,MACAC,EASI,EATJA,KACAiB,EAQI,EARJA,SACAC,EAOI,EAPJA,WAGA1B,GAII,EANJK,YAMI,EALJsB,OAKI,EAJJ3B,mBAEAZ,GAEI,EAHJD,kBAGI,EAFJC,SAEI,EADJoK,YAEA,OACE,kBAAC,IAAD,CACEC,OACE,kBAAC,IAAD,CAAK1K,GAAIA,EAAIuD,QAAS,kBAAMtC,EAAkBjB,KAC5C,kBAAC,kBAAD,CAAiByB,KAAMA,KAQ3BH,YACE,oCACE,kBAAC,IAAD,CACE4B,MAAO,CACLC,QAAS,OACTC,WAAY,SACZE,cAAe,MACfD,eAAgB,QAChBkB,UAAW,EACXO,aAAc,EACd6F,QAAS,IAGX,kBAAC,IAAD,CAAMzG,KAAI,2BAAsBxB,GAAYyB,OAAO,UAChDxB,IAGL,kBAAC,IAAD,CACEsB,KAAK,IACLV,QAAS,kBAAMlD,EAAQmB,EAAOxB,IAC9BkD,MAAO,CACLM,gBAAiB,QACjBM,MAAO,QACPL,aAAc,MACdI,MAAO,UAPX,qDAUarC,EAVb,aAeHJ,I,0BCzDDwJ,G,MAAwB,SAAC,GAOxB,IANL1D,EAMI,EANJA,UACAtE,EAKI,EALJA,OAEAwE,GAGI,EAJJyD,WAII,EAHJzD,aACAE,EAEI,EAFJA,UACAlB,EACI,EADJA,WAEA,OACE,kBAAC,IAAD,CACEsE,OACEtD,EACE,kBAAC,IAAD,CAAMlD,KAAMgD,EAAW/C,OAAO,UAC5B,kBAAC,IAAD,CAAQiE,IAAKhB,KAGf,kBAAC,IAAD,CAAQgB,IAAK,yCAGjB9G,YACE,kBAAC,IAAD,CAAK4B,MAAO,CAAEQ,WAAY,KAIxB,kBAAC,IAAD,CAAKR,MAAO,CAAEY,MAAO,UAArB,KAAmClB,EAAnC,wBAGJkI,aACE,kBAAC,IAAD,CACE5H,MAAO,CACLqB,UAAW,QACXpB,QAAS,OACTE,eAAgB,MAChBC,cAAe,MACfF,WAAY,MACZO,SAAU,SAGXyC,EAAWkB,KAIhB,kBAAC,IAAD,CACEpE,MAAO,CACL4B,aAAc,MACdiG,YAAa,OACb5H,QAAS,OACTE,eAAgB,QAChBC,cAAe,MACfF,WAAY,SACZO,SAAU,SAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUwB,KAAK,WAEjB,kBAAC,IAAD,CAAKjC,MAAO,CAAEqB,UAAW,EAAGb,WAAY,IAAxC,kDCvDFsH,G,MAAY,SAAC,GAQZ,IAPLnD,EAOI,EAPJA,SAEAE,GAKI,EANJD,QAMI,EALJC,aACAC,EAII,EAJJA,cACA5G,EAGI,EAHJA,KACA6G,EAEI,EAFJA,MACAR,EACI,EADJA,GAEA,OACE,kBAAC,IAAD,CACEiD,OACE7C,EACE,kBAAC,IAAD,CAAM3D,KAAM2D,EAAU1D,OAAO,UAC3B,kBAAC,IAAD,CAAQiE,IAAKH,KAGf,kBAAC,IAAD,CAAQG,IAAK,yCAGjB9G,YACE,oCACE,kBAAC,IAAD,CACE4B,MAAO,CACLC,QAAS,OACTC,WAAY,QACZE,cAAe,MACfD,eAAgB,gBAChBkB,UAAW,EACXO,aAAc,EACdpB,WAAY,GACZiH,QAAS,IAGX,kBAAC,IAAD,CAAKzH,MAAO,CAAE4B,aAAc,KAA5B,4DACeiD,EADf,uBAGA,kBAAC,IAAD,wEAAoBC,EAApB,wBAEF,kBAAC,IAAD,CACA9E,MAAO,CACLQ,WAAY,KAGZ,kBAAC,IAAD,CAEEO,KAAK,IACLV,QAASkE,EACT4B,UAAQ,uBACRjE,WAAS,EACTlC,MAAO,CACLM,gBAAiB,QACjBM,MAAO,QACPL,aAAc,QATlB,mEAoBN,kBAAC,IAAD,CAAKP,MAAO,CAAEqB,UAAW,EAAGb,WAAY,KAAOtC,MCjE/C6J,EAAe,SAAC,GAA6B,IAA5B5I,EAA2B,EAA3BA,sBACrB,OACE,kBAAC,IAAD,KACIA,EAAsBkF,OAWtB,kBAAC,IAAD,CACErE,MAAO,CACL6H,YAAa,GACbG,aAAc,KAIf7I,GAjBH,yBACEa,MAAO,CACLC,QAAS,OACTC,WAAY,SACZE,cAAe,WAGjB,kBAAC,IAAD,CAASW,KAAK,QAAQf,MAAO,CAAEqB,UAAW,U,wHCjBpD,6f,uhBCqCM+E,E,MAASxJ,EAAcqL,mBA6SdC,EA3SH,WACV,IADgB,EAEsB1K,oBAAS,GAF/B,mBAETD,EAFS,KAEI4K,EAFJ,OAGc3K,oBAAS,GAHvB,mBAGT4K,EAHS,KAGAC,EAHA,OAIwB7K,oBAAS,GAJjC,mBAIT+H,EAJS,KAIK+C,EAJL,OAKsB9K,mBAAS,QAL/B,mBAKT+K,EALS,KAKIC,EALJ,OAMehL,mBAAS,MANxB,mBAMT+J,EANS,KAMIkB,EANJ,OAOYjL,mBAAS,kBAAC,IAAD,CAAeuD,KAAK,WAPzC,mBAOT2H,EAPS,KAODC,EAPC,OAQ0BnL,oBAAS,GARnC,gCASgBA,mBAAS,OATzB,mBASTR,EATS,KASC4L,EATD,OAUsBpL,mBAAS,MAV/B,mBAUTqL,EAVS,KAUI5L,EAVJ,OAWkCO,oBAAS,GAX3C,mBAWTJ,EAXS,KAWU0L,EAXV,KA4FhB,SAASzL,IACP2B,QAAQC,IACN,eACA1B,EACA,wBACAH,GAGF+K,GAAe,GACfW,GAAqB,GACrB1C,EAAO2C,OA4DT,SAASzD,EAAU0D,GAAkC,IAA5B1I,EAA2B,uDAAT,QACrCtD,GACJ4L,EACE,kBAAC,IAAD,CACEK,SAAS,OACTC,OAAO,aACPC,QAAS,kBAAMP,EAAY,OAC3BpB,OACE,kBAAC,IAAD,CAAQzG,KAAM,GAAIf,MAAO,CAAEM,oBACJ,UAApBA,EACC,kBAAC,IAAD,CAAY2B,KAAK,OAAOtB,MAAO,GAAID,OAAQ,KAE3C,kBAAC,IAAD,CAAcuB,KAAK,OAAOtB,MAAO,GAAID,OAAQ,OAKlDsI,IA5JP9J,qBAAU,WACRkK,IAAOC,WAAU,SAACtH,GAChB,OAAQA,EAAEuH,OAAO5K,MACf,IAAK,uBACH,IAAM6K,EAAkB9C,SAAS+C,gBAAgB,UACjDD,EAAgBzH,MAAQC,EAAEuH,OAAOG,KAAKC,OAAS3H,EAAEuH,OAAOG,KAAKC,OAAS,eACtEjD,SAASkD,KAAKC,WAAWC,aAAaN,GACtC,MACF,IAAK,mBACHnD,EAAOC,QACP8B,GAAe,GAEf,MACF,IAAK,sBACH/B,EAAO2C,OACPZ,GAAe,OAMnBiB,IAAOU,KAAK,uBAAuBhL,MAAK,SAACiL,GACvCtB,EAAQsB,GACR/K,QAAQC,IAAI8K,GACZpL,OAAOsF,OAAS8F,EAAKjN,GACrB6L,EAAU,SAKdhK,OAAOqL,iBAAiB,YAAY,SAACjI,GAAD,OAAOA,EAAEkI,sBAqD7CzB,EAAe,aApDd,IAEHtJ,qBAAU,WACR,IAAM8H,EAAS,IAAIkD,gBAAgBzD,SAASC,SAASC,QAGnDK,EAAOmD,IAAI,yBAC4B,UAAvCnD,EAAOoD,IAAI,yBAEX/B,GAAW,GAGT,CAAC,UAAW,UAAUgC,UAAUrD,EAAOoD,IAAI,iBAC7C/B,GAAW,GACXC,GAAgB,IAGlBlC,EAAOkE,GAAG,gBAAgB,WACxBtL,QAAQC,IAAI,gBAEZ6J,GAAqB,GACrB7L,EAAe,SAYjBmJ,EAAOkE,GAAG,cAAc,WACtBnC,GAAe,QAEhB,IA8FH,IAAMpL,EAAO,SAACwN,EAASC,EAAeC,GACpC,OACE,kBAAC,IAAD,CAAK5K,UAAU,cACb,kBAAC,IAAD,CAAKA,UAAU,OAAO0K,GACtB,kBAAC,IAAD,CAAK1K,UAAU,OACb,kBAAC,IAAD,CAAYQ,QAASmK,GAAgBC,MAiB7C,IAAMlG,EAAK,SAACxC,GACVyG,EAAezG,EAAE2I,cAAcC,QAAQC,IACvC5L,QAAQC,IAAI,QAGd,OACE,kBAAC,IAAD,CAAgB4L,WAAW,GACzB,kBAAC,IAAD,CACEC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYzK,QAASkE,EAAI4B,UAAQ,OAAO6C,KAAK,8CAC1B,SAAhBT,EACC,kBAAC,IAAD,CAAgBtG,KAAK,UAErB,kBAAC,IAAD,OAIHsF,GACC,oCACGa,EACC,kBAAC,IAAD,CACE/H,QAAS,kBAAMmI,EAAe,YAC9BrC,UAAQ,UACR6C,KAAK,8CAEY,YAAhBT,EACC,kBAAC,IAAD,CAAyBtG,KAAK,UAE9B,kBAAC,IAAD,OAIJ,MAOV,kBAAC,IAAD,CAAMsG,YAAaA,EAAaG,OAAQA,EAAQqC,MAAOlC,GACrD,kBAAC,OAAD,CACE/L,GAAG,OACHyK,YAAaA,EACbhD,GAAIA,EACJxH,KAAMA,EACNuI,UAAWA,EACXtI,SAAUA,EACVC,eAAgBA,EAChBC,kBAlJV,SAA2B6E,EAAGzD,GAC5BrB,EAAe,MACf0L,EACE,oCACE,kBAAC,IAAD,CAAaQ,QAAS,kBAAMR,EAAU,QAIpC,kBAAC,IAAD,CAAiBqC,WAAS,EAAC3K,QAAS,kBA8B5C,SAAkB0B,EAAGzD,GACnB8K,IACG6B,YAAY,sBAAuB,CAClCC,OAAQ,QACRC,OAAQ,eACRnE,OAAQ,CACNtH,QAASpB,EACT8M,SAAU,aAGbC,OAAM,SAACC,GACNtM,QAAQC,IAAIqM,MAzCgCC,CAASxJ,EAAGzD,KAAtD,8FA2IEnB,QAnIV,SAAiBmB,EAAOkN,GACtBpC,IACG6B,YAAY,iCAAkC,CAC7CG,SAAU,YAEXtM,MAAK,SAAC2M,GACLzM,QAAQC,IAAIwM,GACZ9M,OAAO+M,aAAaC,cAAc,CAChCC,UACE,gMACFlM,OAAQpB,EACRuN,QAAQ,YAAD,OAAclN,OAAOsF,OAArB,YAA+BuH,KAErC1M,MAAK,SAACgN,GACL9M,QAAQC,IAAI,OAAQ6M,MAErBT,OAAM,SAACC,GACNtM,QAAQC,IAAI,cAAeqM,UAmH3BlO,kBAAmBA,EACnBC,gBAAiBA,EACjBC,eAhEV,SAAwByE,GACtBqH,IACGU,KAAK,yBAA0B,IAC/BhL,MAAK,SAAC2M,GACLzM,QAAQC,IAAI,sBAAuBwM,MAEpCJ,OAAM,SAACU,GACN/M,QAAQC,IAAI,sBAAuB8M,OA0D/BxO,YAAaA,IAEf,kBAAC,UAAD,CACET,GAAG,UACHyH,GAAIA,EACJgD,YAAaA,EACbjC,UAAWA,EACXtI,SAAUA,EACVI,kBAAmBA,EACnBC,gBAAiBA,EACjBkI,aAAcA,EACdtI,eAAgBA,EAChBM,YAAaA,EACbR,KAAMA,IAER,kBAAC,qBAAD,CACED,GAAG,uBACHyH,GAAIA,EACJe,UAAWA,EACXtI,SAAUA,EACVI,kBAAmBA,EACnBC,gBAAiBA,EACjBN,KAAMA,IAER,kBAAC,wBAAD,CACED,GAAG,0BACHyH,GAAIA,EACJe,UAAWA,EACXtI,SAAUA,EACVI,kBAAmBA,EACnBC,gBAAiBA,EACjBN,KAAMA,QClUlBqM,IAAOU,KAAK,gBAEZkC,IAASC,OAAO,kBAAC,EAAD,MAASxF,SAASyF,eAAe,U,gCCVjD,uS,uICmBMC,EAAgB,SAAC,GAWjB,EAVJC,SAUK,IATLnP,EASI,EATJA,eAEAiB,GAOI,EARJpB,GAQI,EAPJoB,MACAI,EAMI,EANJA,MACAC,EAKI,EALJA,KACAJ,EAII,EAJJA,OACAC,EAGI,EAHJA,YACAI,EAEI,EAFJA,cACAtB,EACI,EADJA,kBAEA,OACE,oCACE,kBAAC,IAAD,CAAW2L,YAAY,SACrB,kBAAC,IAAD,CACE/L,GAAG,QACHqM,QAAS,kBAAMlM,EAAe,OAC9BoP,OAAO,kFACPC,QACE,oCACE,kBAAC,IAAD,CAEE9E,OACI,kBAAC,kBAAD,CAAiBjJ,KAAMA,IAE3BH,YACE,kBAAC,IAAD,CACE4B,MAAO,CACLC,QAAS,OACTC,WAAY,QACZE,cAAe,SACfD,eAAgB,WAGlB,kBAAC,IAAD,CACEH,MAAO,CACL4B,aAAc,IAEhBZ,KAAM,6BACNC,OAAO,UAEN9C,KAKP,kBAAC,IAAD,CACE6B,MAAO,CACLC,QAAS,OACTC,WAAY,SACZE,cAAe,MACfD,eAAgB,QAChBkB,UAAW,EACXO,aAAc,EACd6F,QAAS,IAGVvJ,IAGL,kBAAC,IAAD,CACE8B,MAAO,CACLC,QAAS,OACTC,WAAY,QACZC,eAAgB,QAChBC,cAAe,WAGjB,kBAAC,IAAD,SAAOhC,GACP,kBAAC,IAAD,CAAK4B,MAAO,CAAE4B,aAAc,KAA5B,qHAC2BpD,IAG7B,kBAAC,IAAD,CACIwB,MAAO,CAAEM,gBAAiB,QAASM,MAAO,SAC1CP,QAAS,SAAC0B,GAAD,OAAO7E,EAAkB6E,EAAGzD,IACrCwC,KAAK,WACLC,KAAK,KACLmB,WAAS,GALb,4CA7DV,SCfEqK,EAAqB,SAAC,GAIrB,IAHLtP,EAGI,EAHJA,eACAoF,EAEI,EAFJA,eACAuD,EACI,EADJA,WAEA,OACE,oCACG,kBAAC,IAAD,CAAWiD,YAAY,kBACtB,kBAAC,IAAD,CACE/L,GAAG,iBACHqM,QAAS,kBAAMlM,EAAe,OAO9BoP,OAAO,4EACPC,QACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,IAAI,oIACJC,YAAY,KACZvL,SAAU,SAACa,GAAD,OAAOM,EAAeN,EAAG,qBACnCrD,KAAK,WAKbgO,QAAS,CACP,CACEC,MAAO,6CACP7L,KAAM,WACNqK,OAAQ,WACNvF,UA7BZ,W","file":"static/js/main.1fc21423.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n  Link,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { StickersAllItem, SliderItem, StickersItem } from \"../items\";\r\nimport { SocketManager, dataSlider } from \"../helpers\";\r\nimport { ModalStickers } from \"../modals\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst Shop = ({\r\n  id,\r\n  stub,\r\n  snackbar,\r\n  setActiveModal,\r\n  openPaymentSystem,\r\n  qiwiPay,\r\n  connectTwoDevices,\r\n  socketReconnect,\r\n  AddToCommunity,\r\n  isConnected,\r\n}) => {\r\n  let targetId = 0;\r\n  // let dataStickers = [];\r\n\r\n  const [activeTab, setActiveTab] = useState(\"all-stickers\");\r\n  const [slideIndex, setSlideIndex] = useState(1);\r\n  const [dataStickers, setDataStickers] = useState([]);\r\n\r\n  // RENDERS\r\n  // const [renderDataStickersAll, setRenderDataStickersAll] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllStickers();\r\n  }, []);\r\n\r\n  function openModalStickers(id) {\r\n    // targetId = +e.currentTarget.id;\r\n    // console.log(\"targetId\", targetId);\r\n\r\n    const {\r\n      name,\r\n      author,\r\n      description,\r\n      tags,\r\n      price,\r\n      icon,\r\n      stickersCount,\r\n    } = dataStickers.find((stickers) => stickers.id === +id);\r\n\r\n    setActiveModal(\r\n      <ModalStickers\r\n        name={name}\r\n        price={price}\r\n        icon={icon}\r\n        author={author}\r\n        description={description}\r\n        tags={tags}\r\n        stickersCount={stickersCount}\r\n        setActiveModal={setActiveModal}\r\n        openPaymentSystem={openPaymentSystem}\r\n      />\r\n    );\r\n  }\r\n\r\n  function tab(type) {\r\n    setActiveTab(type);\r\n    window.scrollTo(0, 0);\r\n\r\n    getAllStickers(type === \"all-stickers\" ? [] : [type]);\r\n  }\r\n\r\n  function getAllStickers(tags = []) {\r\n    return callMethod(\"getStickerPacks\", {\r\n      tags,\r\n    }).then(({ message }) => {\r\n      setDataStickers(message);\r\n      // dataStickers = message;\r\n      console.log(\"getAllStickers message\", message);\r\n      console.log(\"getAllStickers dataStickers\", dataStickers);\r\n    });\r\n  }\r\n\r\n  const renderDataStickersAll = dataStickers.map((item, index) => {\r\n    return (\r\n      <StickersAllItem\r\n        key={index}\r\n        id={item.id}\r\n        name={item.name}\r\n        authorId={item.authorId}\r\n        authorName={item.authorName}\r\n        description={item.description}\r\n        price={item.price}\r\n        icon={item.icon}\r\n        amount={item.amount}\r\n        openModalStickers={openModalStickers}\r\n        qiwiPay={qiwiPay}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderSliderItem = dataSlider.map((item, index) => {\r\n    return (\r\n      <SliderItem\r\n        key={index}\r\n        id={item.id}\r\n        className={item.className}\r\n        openModalStickers={openModalStickers}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      {connectTwoDevices ? (\r\n        stub(\r\n          \"Вы подключились с 2 устройств \",\r\n          socketReconnect,\r\n          \"Переподключиться\"\r\n        )\r\n      ) : (\r\n        <>\r\n          {!isConnected ? (\r\n            stub(\"Проводятся тех. работы\", socketReconnect, \"Повторить\")\r\n          ) : (\r\n            <>\r\n              <PanelHeaderSimple\r\n                left={\r\n                  <Div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    <Div\r\n                      onClick={AddToCommunity}\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                        fontSize: \"11px\",\r\n                        height: \"28px\",\r\n                        width: \"110px\",\r\n                        color: \"white\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        userSelect: \"none\"\r\n                      }}\r\n                    >\r\n                      Добавить в группу\r\n                    </Div>\r\n\r\n                    {/* <Div\r\n                      href=\"https://vk.me/kirill_1131\"\r\n                      target=\"_blank\"\r\n                      style={{\r\n                        backgroundColor: \"#3F8AE0\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                        fontSize: \"11px\",\r\n                        height: \"28px\",\r\n                        width: \"60px\",\r\n                        color: \"white\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        userSelect: \"none\"\r\n                      }}\r\n                    >\r\n                      Авторам\r\n                    </Div> */}\r\n\r\n                    <Button\r\n                      style={{\r\n                        backgroundColor: \"#3F8AE0\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                        width: \"80px\",\r\n                        height: \"28px\",\r\n                      }}\r\n                      mode=\"primary\"\r\n                      size=\"m\"\r\n                      // onClick={AddToCommunity}\r\n                      href=\"https://vk.me/kirill_1131\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Авторам\r\n                    </Button>\r\n\r\n\r\n                    {/* <Button\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                        fontSize: \"4px\",\r\n                      }}\r\n                      mode=\"commerce\"\r\n                      size=\"m\"\r\n                      onClick={AddToCommunity}\r\n                    >\r\n                      Добавить в группу\r\n                    </Button>\r\n                    <Button\r\n                      style={{\r\n                        backgroundColor: \"#3F8AE0\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                      mode=\"primary\"\r\n                      size=\"m\"\r\n                      // onClick={AddToCommunity}\r\n                      href=\"https://vk.me/kirill_1131\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Авторам\r\n                    </Button> */}\r\n                  </Div>\r\n                }\r\n              ></PanelHeaderSimple>\r\n\r\n              <Gallery\r\n                // timeout=\"2000\"\r\n                slideIndex={slideIndex}\r\n                onChange={(slideIndex) => setSlideIndex(slideIndex)}\r\n                slideWidth=\"360px\"\r\n                align=\"center\"\r\n                style={{\r\n                  height: \"190px\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                {renderSliderItem}\r\n              </Gallery>\r\n              <>\r\n                <HorizontalScroll>\r\n                  <Div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      flexDirection: \"row\",\r\n                      margin: 10,\r\n                      userSelect: \"none\",\r\n                      // marginRight: 20,\r\n                      // marginLeft: 20,\r\n                    }}\r\n                  >\r\n                    <Div\r\n                      onClick={() => tab(\"all-stickers\")}\r\n                      className={\r\n                        activeTab === \"all-stickers\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Все\r\n                    </Div>\r\n                    <Div\r\n                      onClick={() => tab(\"anime\")}\r\n                      className={\r\n                        activeTab === \"anime\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Аниме\r\n                    </Div>\r\n                    <Div\r\n                      onClick={() => tab(\"games\")}\r\n                      className={\r\n                        activeTab === \"games\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Игры\r\n                    </Div>\r\n                    <Div\r\n                      onClick={() => tab(\"cartoons\")}\r\n                      className={\r\n                        activeTab === \"cartoons\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Мультики\r\n                    </Div>\r\n                    <Div\r\n                      onClick={() => tab(\"films\")}\r\n                      className={\r\n                        activeTab === \"films\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Фильмы\r\n                    </Div>\r\n                    <Div\r\n                      onClick={() => tab(\"tv-series\")}\r\n                      className={\r\n                        activeTab === \"tv-series\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Сериалы\r\n                    </Div>\r\n                  </Div>\r\n                </HorizontalScroll>\r\n              </>\r\n\r\n              <>\r\n                {activeTab === \"all-stickers\" ? (\r\n                  // <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n                  <Div>{renderDataStickersAll}</Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"anime\" ? (\r\n                  <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {/* {activeTab === \"games\" ? (\r\n              <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n\r\n                {activeTab === \"cartoons\" ? (\r\n                  <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"films\" ? (\r\n                  <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"tv-series\" ? (\r\n                  <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {snackbar}\r\n              </>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { Shop };\r\n","import React from \"react\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Div,\r\n  Link,\r\n  InfoRow,\r\n  Input,\r\n  FormLayoutGroup,\r\n  FormLayout,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28WriteOutline from \"@vkontakte/icons/dist/28/write_outline\";\r\n\r\nconst Form = ({\r\n  phoneNumber,\r\n  onChangePhoneNumber,\r\n  editStatus,\r\n  editPhoneNumber\r\n\r\n}) => {\r\n  return (\r\n    <Div\r\n      style={{\r\n        margin: 10,\r\n      }}\r\n    >\r\n      <Group>\r\n        <Cell>\r\n          <Div\r\n            style={{\r\n              marginBottom: 5,\r\n              marginTop: 5,\r\n            }}\r\n          >\r\n            <Div\r\n              style={{\r\n                marginBottom: 5,\r\n                marginTop: 5,\r\n              }}\r\n            >\r\n              Введите номер QIWI Кошелька\r\n            </Div>\r\n\r\n            <Div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n             \r\n              <Div \r\n              style={{\r\n                flexGrow: 10,\r\n              }}>\r\n                <Input\r\n                value={phoneNumber}\r\n                onChange={(e) => onChangePhoneNumber(e)}\r\n                type=\"text\"\r\n                disabled={editStatus ? false : true}\r\n                \r\n              ></Input>\r\n              </Div>\r\n              \r\n              <Div\r\n               style={{\r\n                flexGrow: 0.5,\r\n                marginLeft: 25\r\n              }}\r\n              > \r\n                <Icon28WriteOutline\r\n                fill=\"green\"\r\n                onClick={() => editPhoneNumber(\"edit\")}\r\n              />\r\n              </Div>\r\n            </Div>\r\n          </Div>\r\n\r\n          <Div\r\n            style={{\r\n              marginBottom: 5,\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Group separator=\"show\">\r\n              <Button\r\n                style={{ backgroundColor: \"green\", color: \"white\" }}\r\n                onClick={() => editPhoneNumber(\"save\")}\r\n                mode=\"commerce\"\r\n                size=\"xl\"\r\n                stretched\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </Group>\r\n\r\n            <Group>\r\n              <Div\r\n                style={{\r\n                  marginTop: 10,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  flexDirection: \"column\",\r\n                  whiteSpace: \"pre-wrap\"\r\n                }}\r\n              >\r\n                На указанный вами номер, будут приходить выплаты.\r\n              </Div>\r\n            </Group>\r\n          </Div>\r\n        </Cell>\r\n      </Group>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { Form };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Div,\r\n  Link,\r\n  InfoRow,\r\n  Input,\r\n  FormLayoutGroup,\r\n  FormLayout,\r\n  Button,\r\n  Spinner,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28WriteOutline from \"@vkontakte/icons/dist/28/write_outline\";\r\n\r\nimport { OperationsHistoryItem } from \"../items\";\r\nimport { dataHistory, SocketManager } from \"../helpers\";\r\n\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst Statistics = ({ onChangeAction, openModalWithdrawMoney}) => {\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [amountToday, setAmountToday] = useState(0);\r\n  const [amountAllTime, setAmountAllTime] = useState(0);\r\n  const [donations, setDonations] = useState([]);\r\n  const [groupBalance, setGroupBalance] = useState(0);\r\n  const [withdrawalAmount, setWithdrawalAmount] = useState(0);\r\n  \r\n\r\n  useEffect(() => {\r\n    getStats();\r\n  }, []);\r\n\r\n  function getStats() {\r\n    callMethod(\"getStatsForGroup\").then(({ message }) => {\r\n      console.log(\"getStatsForGroup\", message);\r\n      console.log(\"message.groupName\", message.groupName);\r\n\r\n      setGroupName(message.groupName);\r\n      setAmountToday(message.amountToday);\r\n      setAmountAllTime(message.amountAllTime);\r\n      setDonations(message.donations);\r\n      setGroupBalance(message.groupBalance);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  function formatDate(date) {\r\n    date = new Date(date * 1000);\r\n\r\n    let dd = date.getDate();\r\n    if (dd < 10) dd = \"0\" + dd;\r\n    let mm = date.getMonth() + 1;\r\n    if (mm < 10) mm = \"0\" + mm;\r\n    let yy = date.getFullYear() % 100;\r\n    if (yy < 10) yy = \"0\" + yy;\r\n    let hh = date.getHours();\r\n    if (hh < 10) hh = \"0\" + hh;\r\n    let minutes = date.getMinutes();\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    return dd + \".\" + mm + \".\" + yy + \" \" + hh + \":\" + minutes;\r\n  }\r\n\r\n  const renderHistory = donations.map((item, index) => {\r\n    const senderUrl = \"https://vk.com/id\" + item.userId;\r\n\r\n    return (\r\n      <OperationsHistoryItem\r\n        key={index}\r\n        id={index + 1}\r\n        senderUrl={senderUrl}\r\n        amount={item.amount}\r\n        senderPhoto={item.userPhotoURL}\r\n        createdAt={item.createdAt}\r\n        formatDate={formatDate}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!renderHistory.length ? (\r\n        <div className=\"spinner\">\r\n          <Spinner size=\"large\" style={{ marginTop: 90 }} />\r\n        </div>\r\n      ) : (\r\n        <Div\r\n          style={{\r\n            margin: 10,\r\n          }}\r\n        >\r\n          <Cell>\r\n            <Div>\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Статистика по группе:\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  {groupName}\r\n                </Div>\r\n              </Group>\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За сегодня: {amountToday} руб\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За все время: {amountAllTime} руб\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Баланс: {groupBalance} руб\r\n                </Div>\r\n\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"start\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    size=\"m\"\r\n                    onClick={getStats}\r\n                    style={{\r\n                      marginBottom: 5,\r\n                      marginTop: 5,\r\n                      marginLeft: 15,\r\n                      backgroundColor: \"green\",\r\n                      color: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      width: \"160px\",\r\n                    }}\r\n                  >\r\n                    Обновить данные\r\n                  </Button>\r\n                  <Button\r\n                    size=\"m\"\r\n                    onClick={openModalWithdrawMoney}\r\n                    style={{\r\n                      marginBottom: 5,\r\n                      marginTop: 5,\r\n                      marginLeft: 15,\r\n                      backgroundColor: \"#3F8AE0\",\r\n                      color: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      width: \"160px\",\r\n                    }}\r\n                  >\r\n                    Вывести\r\n                  </Button>\r\n                </Div>\r\n              </Group>\r\n\r\n              {renderHistory}\r\n            </Div>\r\n          </Cell>\r\n        </Div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Statistics };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Div,\r\n  Link,\r\n  InfoRow,\r\n  Input,\r\n  FormLayoutGroup,\r\n  FormLayout,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28WriteOutline from \"@vkontakte/icons/dist/28/write_outline\";\r\n\r\nimport { GroupItem } from \"../items\";\r\nimport { dataGroups, SocketManager } from \"../helpers\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst StatisticsGroups = ({ go }) => {\r\n  const [dataOperationsHistory, setDataOperationsHistory] = useState([]);\r\n  const [amountToday, setAmountToday] = useState(0);\r\n  const [amountAllTime, setAmountAllTime] = useState(0);\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  function getStats() {\r\n    callMethod(\"getStatsForGroups\").then(({ message }) => {\r\n      setAmountToday(message.amountToday);\r\n      setAmountAllTime(message.amountAllTime);\r\n      setGroups(message.groups);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getStats();\r\n  }, []);\r\n\r\n  function formatDate(date) {\r\n    date = new Date(date * 1000);\r\n\r\n    let dd = date.getDate();\r\n    if (dd < 10) dd = \"0\" + dd;\r\n    let mm = date.getMonth() + 1;\r\n    if (mm < 10) mm = \"0\" + mm;\r\n    let yy = date.getFullYear() % 100;\r\n    if (yy < 10) yy = \"0\" + yy;\r\n    let hh = date.getHours();\r\n    if (hh < 10) hh = \"0\" + hh;\r\n    let minutes = date.getMinutes();\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    return `${dd}.${mm}.${yy} ${hh}:${minutes}`;\r\n  }\r\n\r\n  const renderGroups = groups.map((item, index) => {\r\n    const groupUrl = \"https://vk.com/club\" + item.groupId;\r\n\r\n    return (\r\n      <GroupItem\r\n        key={index}\r\n        id={index + 1}\r\n        go={go}\r\n        groupUrl={groupUrl}\r\n        groupId={item.groupId}\r\n        profitToday={item.amountToday}\r\n        profitAllTime={item.amountAllTime}\r\n        name={item.groupName}\r\n        photo={item.groupPhotoURL}\r\n        formatDate={formatDate}\r\n        donations={item.donations}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div\r\n      style={{\r\n        margin: 10,\r\n      }}\r\n    >\r\n      <Cell>\r\n        <Div>\r\n          <Group separator=\"show\">\r\n            <Div\r\n              style={{\r\n                marginBottom: 5,\r\n                marginTop: 5,\r\n                marginLeft: 15,\r\n              }}\r\n            >\r\n              Статистика по всем группам:\r\n            </Div>\r\n          </Group>\r\n          <Group separator=\"show\">\r\n            <Div\r\n              style={{\r\n                marginBottom: 5,\r\n                marginTop: 5,\r\n                marginLeft: 15,\r\n              }}\r\n            >\r\n              За сегодня: {amountToday} руб\r\n            </Div>\r\n            <Div\r\n              style={{\r\n                marginBottom: 5,\r\n                marginTop: 5,\r\n                marginLeft: 15,\r\n              }}\r\n            >\r\n              За все время: {amountAllTime} руб\r\n            </Div>\r\n\r\n            <Button\r\n              size=\"m\"\r\n              onClick={getStats}\r\n              style={{\r\n                marginBottom: 5,\r\n                marginTop: 5,\r\n                marginLeft: 15,\r\n                backgroundColor: \"green\",\r\n                color: \"white\",\r\n                borderRadius: \"6px\",\r\n                width: \"160px\",\r\n              }}\r\n            >\r\n              Обновить данные\r\n            </Button>\r\n          </Group>\r\n\r\n          <Div>{renderGroups}</Div>\r\n        </Div>\r\n      </Cell>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { StatisticsGroups };\r\n","import React from \"react\";\r\n\r\nconst StickerPackIcon = ({ icon }) => {\r\n    return (\r\n        <img\r\n            src={icon}\r\n            width={90}\r\n            height={90}\r\n            style={{\r\n                marginTop: 10,\r\n                marginRight: 20,\r\n                marginBottom: 10\r\n            }}\r\n        >\r\n        </img>\r\n    )\r\n};\r\n\r\nexport { StickerPackIcon };","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { Form, Statistics, StatisticsGroups } from \"../components\";\r\nimport { OperationsHistoryItem } from \"../items\";\r\nimport { dataHistory, SocketManager } from \"../helpers\";\r\nimport { ModalWithdrawMoney } from \"../modals\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst Profile = ({\r\n  id,\r\n  go,\r\n  networkStatus,\r\n  stub,\r\n  snackbar,\r\n  openAlert,\r\n  connectTwoDevices,\r\n  socketReconnect,\r\n  isSuperAdmin,\r\n  setActiveModal,\r\n  isConnected,\r\n}) => {\r\n  let dataStickersAll = [];\r\n  let withdrawalAmount = 0;\r\n\r\n  const [activeTab, setActiveTab] = useState(\"home\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"+7\");\r\n  const [editStatus, setEditStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getQiwiAccount();\r\n  }, []);\r\n\r\n  function tab(type) {\r\n    switch (type) {\r\n      case \"home\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"statistics\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"statistics-groups\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function getQiwiAccount() {\r\n    callMethod(\"getQiwiAccount\").then(({ status, message }) => {\r\n      if (status === \"success\") {\r\n        setPhoneNumber(message);\r\n      } else {\r\n        openAlert(message, \"red\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function onChangeAction(e, type) {\r\n    const value = +e.target.value.trim();\r\n\r\n    switch (type) {\r\n      case \"withdrawalAmount\":\r\n        console.log(value);\r\n        withdrawalAmount = value;\r\n        break;\r\n    }\r\n  }\r\n\r\n  function withdrawal() {\r\n    callMethod(\"withdrawal\", {\r\n      amount: withdrawalAmount,\r\n    }).then(({ message, status }) => {\r\n      setActiveModal(null);\r\n      openAlert(message, status === \"denied\" ? \"red\" : \"green\");\r\n    });\r\n  }\r\n\r\n  function openModalWithdrawMoney() {\r\n    setActiveModal(\r\n      <ModalWithdrawMoney\r\n        onChangeAction={onChangeAction}\r\n        setActiveModal={setActiveModal}\r\n        withdrawal={withdrawal}\r\n      />\r\n    );\r\n  }\r\n\r\n  function onChangePhoneNumber(e) {\r\n    const value = e.target.value.trim();\r\n\r\n    setPhoneNumber(value);\r\n    console.log(\"phoneNumber\", phoneNumber);\r\n  }\r\n\r\n  const editPhoneNumber = (type) => {\r\n    switch (type) {\r\n      case \"edit\":\r\n        setEditStatus(true);\r\n        break;\r\n      case \"save\":\r\n        setEditStatus(false);\r\n        callMethod(\"changeQiwiAccount\", {\r\n          qiwiAccount: phoneNumber,\r\n        }).then(({ message, status }) => {\r\n          openAlert(message, status === \"denied\" ? \"red\" : \"green\");\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      <PanelHeaderSimple>VIP Стикеры</PanelHeaderSimple>\r\n\r\n      {/* {!isConnected ? (\r\n        stub(\"Проводятся тех. работы\", socketReconnect, \"Повторить\")\r\n      ) : (\r\n        <>\r\n          {connectTwoDevices ? (\r\n            stub(\r\n              \"Вы подключились с 2 устройств \",\r\n              socketReconnect,\r\n              \"Переподключиться\"\r\n            )\r\n          ) : ( */}\r\n\r\n      {connectTwoDevices ? (\r\n        stub(\r\n          \"Вы подключились с 2 устройств \",\r\n          socketReconnect,\r\n          \"Переподключиться\"\r\n        )\r\n      ) : (\r\n        <>\r\n          {!isConnected ? (\r\n            stub(\"Проводятся тех. работы\", socketReconnect, \"Повторить\")\r\n          ) : (\r\n            <>\r\n              <FixedLayout vertical=\"top\" filled={true}>\r\n                <Tabs>\r\n                  <TabsItem\r\n                    onClick={() => tab(\"home\")}\r\n                    selected={activeTab === \"home\"}\r\n                  >\r\n                    Профиль\r\n                  </TabsItem>\r\n                  <TabsItem\r\n                    onClick={() => tab(\"statistics\")}\r\n                    selected={activeTab === \"statistics\"}\r\n                  >\r\n                    Статистика\r\n                  </TabsItem>\r\n\r\n                  {isSuperAdmin ? (\r\n                    <TabsItem\r\n                      onClick={() => tab(\"statistics-groups\")}\r\n                      selected={activeTab === \"statistics-groups\"}\r\n                    >\r\n                      Все группы\r\n                    </TabsItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Tabs>\r\n              </FixedLayout>\r\n              <>\r\n                {activeTab === \"home\" ? (\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    <Form\r\n                      phoneNumber={phoneNumber}\r\n                      onChangePhoneNumber={onChangePhoneNumber}\r\n                      editStatus={editStatus}\r\n                      editPhoneNumber={editPhoneNumber}\r\n                    />\r\n                  </Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"statistics\" ? (\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    <Statistics\r\n                      onChangeAction={onChangeAction}\r\n                      openModalWithdrawMoney={openModalWithdrawMoney}\r\n                    />\r\n                  </Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"statistics-groups\" ? (\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    <StatisticsGroups go={go} />\r\n                  </Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n\r\n              {snackbar}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { Profile };\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { Statistics } from \"../components\";\r\n\r\nconst GroupInfoStatistic = ({\r\n  id,\r\n  go,\r\n  stub,\r\n  snackbar,\r\n  openAlert,\r\n  connectTwoDevices,\r\n  socketReconnect,\r\n}) => {\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      <PanelHeaderSimple\r\n      left={\r\n        <PanelHeaderBack onClick={go} data-to=\"profile\" />\r\n      }\r\n      >\r\n        Статистика по группе\r\n        </PanelHeaderSimple>\r\n\r\n      <>\r\n      {connectTwoDevices ? (\r\n            stub(\r\n              \"Вы подключились с 2 устройств \",\r\n              socketReconnect,\r\n              \"Переподключиться\"\r\n            )\r\n        ) : (\r\n          <>\r\n            <Div>\r\n              <Statistics \r\n              />\r\n            </Div>\r\n            {snackbar}\r\n          </>\r\n        )}\r\n      </>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { GroupInfoStatistic };\r\n","export const requestMethod = 'https://one-digitalspace.ru/vipstickers/'; ","import io from \"socket.io-client\";\r\nimport { Socket } from 'socket.io-client';\r\n/**\r\n * @typedef {Object} Answer\r\n * @property {'success' | 'denied'} status - Статус ответа\r\n * @property {any} message - Сообщение ответа\r\n */\r\nexport class SocketManager {\r\n    socket = null;\r\n\r\n    /**\r\n     * @returns {Socket}\r\n     */\r\n    static createConnection() {\r\n        if (SocketManager.socket) {\r\n            SocketManager.socket.close();\r\n        }\r\n        \r\n        SocketManager.socket = io(\"https://one-digitalspace.ru\", {\r\n            path: \"/stickers/socket\",\r\n            query: document.location.search.slice(1),\r\n            reconnectionAttempts: 1,\r\n            transports: ['websocket']\r\n        });\r\n        \r\n        return SocketManager.socket;\r\n    }\r\n    \r\n    /**\r\n     * @param {string} methodName - Имя метода\r\n     * @param {object} params - Параметры метода\r\n     * @returns {Promise<Answer>}\r\n     */\r\n    static async callMethod(methodName, params = {}) {\r\n        const { socket } = SocketManager;\r\n\r\n        if (!socket)\r\n            return Promise.resolve({\r\n                status: 'denied',\r\n                message: 'Сокет не подключен'\r\n            });\r\n\r\n        return new Promise((resolve) => {\r\n            socket.emit(methodName, params, (answer) => {\r\n                return resolve(answer);\r\n            });\r\n        });\r\n    }\r\n}","\r\n\r\nconst dataSlider = [\r\n  {\r\n    id: 7,\r\n    className: \"iconSliderNaruto\"\r\n  },\r\n  {\r\n    id: 6,\r\n    className: \"iconSliderSimpsons\"\r\n  },\r\n  {\r\n    id: 4,\r\n    className: \"iconSliderJoker\"\r\n  },\r\n  {\r\n    id: 3,\r\n    className: \"iconSliderOno\"\r\n  },\r\n  {\r\n    id: 2,\r\n    className: \"iconSliderMatrix\"\r\n  },\r\n\r\n\r\n\r\n];\r\n\r\nexport { dataSlider };\r\n","import React from \"react\";\r\nimport { SimpleCell, Button, Div, Link } from \"@vkontakte/vkui\";\r\n\r\n// import { StickerPackIcon } from '../components'\r\n\r\nconst SliderItem = ({\r\nid,\r\nopenModalStickers,\r\nclassName\r\n}) => {\r\n  return (\r\n    <Div\r\n    id={id}\r\n    onClick={() => openModalStickers(id)}\r\n    className={className}\r\n  >\r\n    \r\n  </Div>\r\n  );\r\n};\r\n\r\nexport { SliderItem };\r\n","import React from \"react\";\r\nimport { SimpleCell, Button, Div, Link } from \"@vkontakte/vkui\";\r\n\r\nimport { StickerPackIcon } from \"../components\";\r\n\r\nconst StickersAllItem = ({\r\n  id,\r\n  name,\r\n  price,\r\n  icon,\r\n  authorId,\r\n  authorName,\r\n  description,\r\n  amount,\r\n  openModalStickers,\r\n  openPaymentSystem,\r\n  qiwiPay,\r\n  fetchedUser,\r\n}) => {\r\n  return (\r\n    <SimpleCell\r\n      before={\r\n        <Div id={id} onClick={() => openModalStickers(id)}>\r\n          <StickerPackIcon icon={icon}></StickerPackIcon>\r\n        </Div>\r\n      }\r\n      // after={\r\n      //   <Link id={id} mode=\"tertiary\">\r\n      //     купить\r\n      //   </Link>\r\n      // }\r\n      description={\r\n        <>\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"start\",\r\n              marginTop: 5,\r\n              marginBottom: 5,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Link href={`https://vk.com/id${authorId}`} target=\"_blank\">\r\n              {authorName}\r\n            </Link>\r\n          </Div>\r\n          <Button\r\n            size=\"m\"\r\n            onClick={() => qiwiPay(price, id)}\r\n            style={{\r\n              backgroundColor: \"green\",\r\n              color: \"white\",\r\n              borderRadius: \"6px\",\r\n              width: \"120px\",\r\n            }}\r\n          >\r\n            Купить за {price} ₽\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      {name}\r\n    </SimpleCell>\r\n  );\r\n};\r\n\r\nexport { StickersAllItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\nimport Icon16Down from \"@vkontakte/icons/dist/16/down\";\r\nimport Icon16Up from \"@vkontakte/icons/dist/16/up\";\r\nimport { formatCoins } from \"../helpers\";\r\n\r\nconst OperationsHistoryItem = ({\r\n  senderUrl,\r\n  amount,\r\n  senderName,\r\n  senderPhoto,\r\n  createdAt,\r\n  formatDate,\r\n}) => {\r\n  return (\r\n    <Cell\r\n      before={\r\n        senderPhoto ? (\r\n          <Link href={senderUrl} target=\"_blank\">\r\n            <Avatar src={senderPhoto} />\r\n          </Link>\r\n        ) : (\r\n          <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n        )\r\n      }\r\n      description={\r\n        <Div style={{ marginLeft: 20 }}>\r\n          {/* <Div style={{ wordWrap: \"break-word\", marginBottom: 5 }}>\r\n            {senderName}\r\n          </Div> */}\r\n          <Div style={{ color: \"green\" }}>+ {amount} руб</Div>\r\n        </Div>\r\n      }\r\n      asideContent={\r\n        <Div\r\n          style={{\r\n            marginTop: \"-16px\",\r\n            display: \"flex\",\r\n            justifyContent: \"end\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"end\",\r\n            fontSize: \"10px\",\r\n          }}\r\n        >\r\n          {formatDate(createdAt)}\r\n        </Div>\r\n      }\r\n    >\r\n      <Div\r\n        style={{\r\n          marginBottom: \"5px\",\r\n          paddingLeft: \"15px\",\r\n          display: \"flex\",\r\n          justifyContent: \"start\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          fontSize: \"16px\",\r\n        }}\r\n      >\r\n        <Div>\r\n          <Icon16Up fill=\"green\" />\r\n        </Div>\r\n        <Div style={{ marginTop: 4, marginLeft: 4 }}>Покупка</Div>\r\n      </Div>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport { OperationsHistoryItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link, Button } from \"@vkontakte/vkui\";\r\nimport Icon16Up from \"@vkontakte/icons/dist/16/up\";\r\n\r\n\r\nimport { StatisticsTargetGroup } from \"../panels\";\r\n\r\nconst GroupItem = ({\r\n  groupUrl,\r\n  groupId,\r\n  profitToday,\r\n  profitAllTime,\r\n  name,\r\n  photo,\r\n  go,\r\n}) => {\r\n  return (\r\n    <Cell\r\n      before={\r\n        groupUrl ? (\r\n          <Link href={groupUrl} target=\"_blank\">\r\n            <Avatar src={photo} />\r\n          </Link>\r\n        ) : (\r\n          <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n        )\r\n      }\r\n      description={\r\n        <>\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"start\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              marginTop: 5,\r\n              marginBottom: 5,\r\n              marginLeft: 18,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Div style={{ marginBottom: 10 }}>\r\n              За сегодня: {profitToday} руб\r\n            </Div>\r\n            <Div>За все время: {profitAllTime} руб</Div>\r\n          </Div>\r\n          <Div \r\n          style={{\r\n            marginLeft: 18,\r\n          }}\r\n          >\r\n            <Button\r\n              // id={groupId}\r\n              size=\"m\"\r\n              onClick={go}\r\n              data-to=\"group-info-statistic\"\r\n              stretched\r\n              style={{\r\n                backgroundColor: \"green\",\r\n                color: \"white\",\r\n                borderRadius: \"6px\",\r\n                // width: \"120px\",\r\n                // marginLeft: 20,\r\n              }}\r\n            >\r\n              Статистика\r\n            </Button>\r\n          </Div>\r\n        </>\r\n      }\r\n    >\r\n      <Div style={{ marginTop: 4, marginLeft: 20 }}>{name}</Div>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport { GroupItem };\r\n","import React from \"react\";\r\nimport {\r\n  Div,\r\n  Spinner\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst StickersItem = ({renderDataStickersAll}) => {\r\n  return (\r\n    <Div>\r\n      {!renderDataStickersAll.length ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <Spinner size=\"large\" style={{ marginTop: 30 }} />\r\n        </div>\r\n      ) : (\r\n        <Div\r\n          style={{\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          \r\n          {renderDataStickersAll}\r\n        </Div>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { StickersItem };\r\n","export * from './Form';\r\nexport * from './Slider';\r\nexport * from './Statistics';\r\nexport * from './StatisticsGroups';\r\nexport * from './StickerPackIcon';\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  View,\n  ScreenSpinner,\n  ConfigProvider,\n  ActionSheetItem,\n  Avatar,\n  Snackbar,\n  CellButton,\n  Div,\n  Epic,\n  Tabbar,\n  TabbarItem,\n  ActionSheet,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Icon28Favorite from \"@vkontakte/icons/dist/28/favorite\";\nimport Icon28MarketOutline from \"@vkontakte/icons/dist/28/market_outline\";\nimport Icon28UserCircleOutline from \"@vkontakte/icons/dist/28/user_circle_outline\";\nimport Icon16Done from \"@vkontakte/icons/dist/16/done\";\nimport Icon16Cancel from \"@vkontakte/icons/dist/16/cancel\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/panels.sass\";\nimport \"./styles/components.sass\";\nimport \"./styles/icons.sass\";\n\nimport {\n  Shop,\n  Profile,\n  GroupInfoStatistic,\n  StatisticsTargetGroup,\n} from \"./panels\";\n\nimport { SocketManager } from \"./helpers\";\n\nconst socket = SocketManager.createConnection();\n\nconst App = () => {\n  let targetId = 0;\n  const [isConnected, setIsConnected] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isSuperAdmin, setIsSuperAdmin] = useState(false);\n  const [activePanel, setActivePanel] = useState(\"shop\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n  const [networkStatus, setNetworkStatus] = useState(false);\n  const [snackbar, setSnackbar] = useState(null);\n  const [activeModal, setActiveModal] = useState(null);\n  const [connectTwoDevices, setConnectTwoDevices] = useState(false);\n\n  // включение медиарекламы\n  // useEffect(() => {\n  //   bridge\n  //     .sendPromise(\"VKWebAppShowNativeAds\", {\n  //       ad_format: \"preloader\",\n  //     })\n  //     .then((res) => console.log(\"VKWebAppShowNativeAds RES\", res))\n  //     .catch((err) => console.log(\"VKWebAppShowNativeAds ERR\", err));\n  // }, []);\n\n  useEffect(() => {\n    bridge.subscribe((e) => {\n      switch (e.detail.type) {\n        case \"VKWebAppUpdateConfig\":\n          const schemeAttribute = document.createAttribute(\"scheme\");\n          schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : \"bright_light\";\n          document.body.attributes.setNamedItem(schemeAttribute);\n          break;\n        case \"VKWebAppViewHide\":\n          socket.close();\n          setIsConnected(true);\n\n          break;\n        case \"VKWebAppViewRestore\":\n          socket.open();\n          setIsConnected(false);\n          break;\n      }\n    });\n\n    function fetchData() {\n      bridge.send(\"VKWebAppGetUserInfo\").then((user) => {\n        setUser(user);\n        console.log(user);\n        window.userId = user.id;\n        setPopout(null);\n      });\n    }\n    fetchData();\n\n    window.addEventListener(\"popstate\", (e) => e.preventDefault() & menu(e));\n  }, []);\n\n  useEffect(() => {\n    const params = new URLSearchParams(document.location.search);\n\n    if (\n      params.has(\"vk_viewer_group_role\") &&\n      params.get(\"vk_viewer_group_role\") === \"admin\"\n    ) {\n      setIsAdmin(true);\n    }\n\n    if ([236908027, 73606509].includes(+params.get(\"vk_user_id\"))) {\n      setIsAdmin(true);\n      setIsSuperAdmin(true);\n    }\n\n    socket.on(\"multisession\", () => {\n      console.log(\"multisession\");\n      // setActiveModal(null); раскомментишь как надо будет\n      setConnectTwoDevices(true);\n      setActiveModal(null);\n      // Это вызывается если произошла мультисессия\n      // Нужно выдать на весь экран типа \"Вы зашли с другого устройства, Переподключиться (кнопка)\"\n      // Кстати, этот ивент вызовет disconnect, то есть isConnected станет false\n\n      // Ок ну щас буду думать как сделать\n      // да я посмотрю как мы делали в дурке, наверное смогу\n      // ты нахуй false ломаешь\n      //хз\n      // ладно, ничего не трогай, я щас буду компоненты по др строить\n    });\n\n    socket.on(\"disconnect\", () => {\n      setIsConnected(false);\n    });\n  }, []);\n\n  function socketReconnect() {\n    console.log(\n      \"isConnected:\",\n      isConnected,\n      \"setConnectTwoDevices:\",\n      connectTwoDevices\n    );\n\n    setIsConnected(true);\n    setConnectTwoDevices(false);\n    socket.open();\n  }\n\n  function menu(e) {\n    setActivePanel(\"shop\");\n  }\n\n  function openPaymentSystem(e, price) {\n    setActiveModal(null);\n    setPopout(\n      <>\n        <ActionSheet onClose={() => setPopout(null)}>\n          {/* <ActionSheetItem autoclose onClick={() => qiwiPay(e,price)}>\n              Оплатить через QIWI\n            </ActionSheetItem> */}\n          <ActionSheetItem autoclose onClick={() => payVkPay(e, price)}>\n            Оплатить через VK Pay\n          </ActionSheetItem>\n        </ActionSheet>\n      </>\n    );\n  }\n\n  function qiwiPay(price, packId) {\n    bridge\n      .sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\n        group_id: 194979339,\n      })\n      .then((res) => {\n        console.log(res);\n        window.QiwiCheckout.createInvoice({\n          publicKey:\n            \"48e7qUxn9T7RyYE1MVZswX1FRSbE6iyCj2gCRwwF3Dnh5XrasNTx3BGPiMsyXQFNKQhvukniQG8RTVhYm3iP6eNeguoXyC99Aq22J8SZPKNgc2WqKx64qaPHePwqThccSrj3HPYcWtCAAb4y8zT5JD6kUUSyJK1sVaG2XrP9hXNzXzo5zVD2iWC9o81QD\",\n          amount: price,\n          comment: `stickers ${window.userId} ${packId}`,\n        })\n          .then((response) => {\n            console.log(\"qiwi\", response);\n          })\n          .catch((error) => {\n            console.log(\"QIWI ERROR:\", error);\n          });\n      });\n  }\n\n  function payVkPay(e, price) {\n    bridge\n      .sendPromise(\"VKWebAppOpenPayForm\", {\n        app_id: 7448001,\n        action: \"pay-to-group\",\n        params: {\n          amount: +price,\n          group_id: 194979339,\n        },\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function openAlert(text, backgroundColor = \"green\") {\n    if (snackbar) return;\n    setSnackbar(\n      <Snackbar\n        duration=\"7000\"\n        layout=\"horizontal\"\n        onClose={() => setSnackbar(null)}\n        before={\n          <Avatar size={24} style={{ backgroundColor }}>\n            {backgroundColor === \"green\" ? (\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            ) : (\n              <Icon16Cancel fill=\"#fff\" width={14} height={14} />\n            )}\n          </Avatar>\n        }\n      >\n        {text}\n      </Snackbar>\n    );\n  }\n\n  const stub = (textDiv, retryFunction, textButton) => {\n    return (\n      <Div className=\"divSpinner\">\n        <Div className=\"div\">{textDiv}</Div>\n        <Div className=\"div\">\n          <CellButton onClick={retryFunction}>{textButton}</CellButton>\n        </Div>\n      </Div>\n    );\n  };\n\n  function AddToCommunity(e) {\n    bridge\n      .send(\"VKWebAppAddToCommunity\", {})\n      .then((res) => {\n        console.log(\" AddToCommunity res\", res);\n      })\n      .catch((err) => {\n        console.log(\" AddToCommunity err\", err);\n      });\n  }\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n    console.log(\"123\");\n  };\n\n  return (\n    <ConfigProvider isWebView={true}>\n      <Epic\n        tabbar={\n          <Tabbar>\n            <TabbarItem onClick={go} data-to=\"shop\" text=\"Стикеры\">\n              {activePanel === \"shop\" ? (\n                <Icon28Favorite fill=\"green\" />\n              ) : (\n                <Icon28Favorite />\n              )}\n            </TabbarItem>\n\n            {fetchedUser && (\n              <>\n                {isAdmin ? (\n                  <TabbarItem\n                    onClick={() => setActivePanel(\"profile\")}\n                    data-to=\"profile\"\n                    text=\"Профиль\"\n                  >\n                    {activePanel === \"profile\" ? (\n                      <Icon28UserCircleOutline fill=\"green\" />\n                    ) : (\n                      <Icon28UserCircleOutline />\n                    )}\n                  </TabbarItem>\n                ) : (\n                  \"\"\n                )}\n              </>\n            )}\n          </Tabbar>\n        }\n      >\n        <View activePanel={activePanel} popout={popout} modal={activeModal}>\n          <Shop\n            id=\"shop\"\n            fetchedUser={fetchedUser}\n            go={go}\n            stub={stub}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            setActiveModal={setActiveModal}\n            openPaymentSystem={openPaymentSystem}\n            qiwiPay={qiwiPay}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            AddToCommunity={AddToCommunity}\n            isConnected={isConnected}\n          />\n          <Profile\n            id=\"profile\"\n            go={go}\n            fetchedUser={fetchedUser}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            isSuperAdmin={isSuperAdmin}\n            setActiveModal={setActiveModal}\n            isConnected={isConnected}\n            stub={stub}\n          />\n          <GroupInfoStatistic\n            id=\"group-info-statistic\"\n            go={go}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            stub={stub}\n          />\n          <StatisticsTargetGroup\n            id=\"statistics-target-group\"\n            go={go}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            stub={stub}\n          />\n        </View>\n      </Epic>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","export * from './Shop';\r\nexport * from './Profile';\r\nexport * from './GroupInfoStatistic';\r\nexport * from './StatisticsTargetGroup';\r\n","import React from \"react\";\r\nimport {\r\n  ModalRoot,\r\n  ModalCard,\r\n  FormLayout,\r\n  Input,\r\n  Avatar,\r\n  InfoRow,\r\n  FormLayoutGroup,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  SimpleCell,\r\n  Link,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { StickerPackIcon } from '../components'\r\n\r\nconst ModalStickers = ({\r\n  targetId,\r\n  setActiveModal,\r\n  id,\r\n  name,\r\n  price,\r\n  icon,\r\n  author,\r\n  description,\r\n  stickersCount,\r\n  openPaymentSystem,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ModalRoot activeModal=\"modal\">\r\n        <ModalCard\r\n          id=\"modal\"\r\n          onClose={() => setActiveModal(null)}\r\n          header=\"Набор стикеров\"\r\n          caption={\r\n            <>\r\n              <SimpleCell\r\n                // before={icon}\r\n                before={\r\n                    <StickerPackIcon icon={icon}></StickerPackIcon>\r\n                }\r\n                description={\r\n                  <Div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"start\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      style={{\r\n                        marginBottom: 10,\r\n                      }}\r\n                      href={\"https://vk.com/kirill_1131\"}\r\n                      target=\"_blank\"\r\n                    >\r\n                      {author}\r\n                    </Link>\r\n                  </Div>\r\n                }\r\n              >\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"start\",\r\n                    marginTop: 5,\r\n                    marginBottom: 5,\r\n                    padding: 0,\r\n                  }}\r\n                >\r\n                  {name}\r\n                </Div>\r\n              </SimpleCell>\r\n              <Div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"start\",\r\n                  justifyContent: \"start\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <Div> {description}</Div>\r\n                <Div style={{ marginBottom: 10 }}>\r\n                  Кол-во стикеров в паке: {stickersCount}\r\n                </Div>\r\n              </Div>\r\n              <Button\r\n                  style={{ backgroundColor: \"green\", color: \"white\" }}\r\n                  onClick={(e) => openPaymentSystem(e, price)}\r\n                  mode=\"commerce\"\r\n                  size=\"xl\"\r\n                  stretched\r\n                >\r\n                  Купить\r\n                </Button>\r\n            </>\r\n          }\r\n        ></ModalCard>\r\n      </ModalRoot>\r\n      ) )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ModalStickers };\r\n","import React from \"react\";\r\nimport {\r\n  ModalRoot,\r\n  ModalCard,\r\n  FormLayout,\r\n  Input,\r\n  Avatar,\r\n  InfoRow,\r\n  FormLayoutGroup,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  SimpleCell,\r\n  Link,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst ModalWithdrawMoney = ({\r\n  setActiveModal,\r\n  onChangeAction,\r\n  withdrawal\r\n}) => {\r\n  return (\r\n    <>\r\n       <ModalRoot activeModal=\"withdraw-money\">\r\n        <ModalCard\r\n          id=\"withdraw-money\"\r\n          onClose={() => setActiveModal(null)}\r\n          // icon={\r\n          //   <Avatar\r\n          //     size={72}\r\n          //     src=\"https://sun9-50.userapi.com/c857036/v857036390/aa9a0/i-iQZ4973FQ.jpg\"\r\n          //   />\r\n          // }\r\n          header=\"Вывод средств\"\r\n          caption={\r\n            <>\r\n              <FormLayout>\r\n                <Input\r\n                  top=\"Укажите сумму для вывода\"\r\n                  placeholder=\"50\"\r\n                  onChange={(e) => onChangeAction(e, 'withdrawalAmount')}\r\n                  type=\"text\"\r\n                />\r\n              </FormLayout>\r\n            </>\r\n          }\r\n          actions={[\r\n            {\r\n              title: \"Вывести\",\r\n              mode: \"commerce\",\r\n              action: () => {\r\n                withdrawal();\r\n              },\r\n            },\r\n          ]}\r\n        ></ModalCard>\r\n      </ModalRoot>\r\n      ) )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ModalWithdrawMoney };\r\n"],"sourceRoot":""}