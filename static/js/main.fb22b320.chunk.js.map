{"version":3,"sources":["components/Form.js","components/Statistics.js","components/StatisticsGroups.js","components/StickerPackIcon.js","helpers/requestMethod.js","helpers/SocketManager.js","helpers/dataSlider.js","items/SliderItem.js","items/StickersAllItem.js","items/OperationsHistoryItem.js","items/GroupItem.js","items/StickersItem.js","components/index.js","App.js","index.js","modals/ModalStickers.js","modals/ModalWithdrawMoney.js","panels/Shop.js","panels/Profile.js","panels/GroupInfoStatistic.js"],"names":["Form","phoneNumber","onChangePhoneNumber","editStatus","editPhoneNumber","style","margin","marginBottom","marginTop","display","alignItems","flexDirection","flexGrow","value","onChange","e","type","disabled","marginLeft","fill","onClick","separator","backgroundColor","color","mode","size","stretched","justifyContent","whiteSpace","callMethod","SocketManager","Statistics","onChangeAction","openModalWithdrawMoney","formatDate","useState","groupName","setGroupName","amountToday","setAmountToday","amountAllTime","setAmountAllTime","donations","setDonations","groupBalance","setGroupBalance","getStats","then","message","console","log","useEffect","renderHistory","map","item","index","senderUrl","userId","key","id","amount","senderPhoto","userPhotoURL","createdAt","borderRadius","width","length","StatisticsGroups","go","getIdGroup","groups","setGroups","renderGroups","groupUrl","groupId","profitToday","profitAllTime","name","photo","groupPhotoURL","className","StickerPackIcon","icon","src","height","marginRight","socket","close","io","path","query","document","location","search","slice","reconnectionAttempts","transports","methodName","params","Promise","resolve","status","emit","answer","dataSlider","price","SliderItem","openModalStickers","StickersAllItem","authorId","authorName","description","qiwiPay","openPaymentSystem","fetchedUser","before","padding","href","target","OperationsHistoryItem","senderName","asideContent","fontSize","paddingLeft","GroupItem","StickersItem","renderDataStickersAll","paddingRight","createConnection","App","isConnected","setIsConnected","isAdmin","setIsAdmin","isSuperAdmin","setIsSuperAdmin","activePanel","setActivePanel","setUser","popout","setPopout","snackbar","setSnackbar","activeModal","setActiveModal","connectTwoDevices","setConnectTwoDevices","targetGroup","setTargetGroup","socketReconnect","open","openAlert","text","duration","layout","onClose","URLSearchParams","has","get","includes","on","bridge","subscribe","detail","data","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","send","user","window","addEventListener","preventDefault","stub","textDiv","retryFunction","textButton","currentTarget","dataset","to","isWebView","tabbar","data-to","modal","autoclose","sendPromise","app_id","action","group_id","catch","error","payVkPay","packId","res","QiwiCheckout","createInvoice","publicKey","comment","response","err","AddToCommunity","date","dd","Date","getDate","mm","getMonth","yy","getFullYear","hh","getHours","minutes","getMinutes","ReactDOM","render","getElementById","ModalStickers","targetId","author","stickersCount","header","caption","ModalWithdrawMoney","withdrawal","top","placeholder","actions","title","Shop","activeTab","setActiveTab","slideIndex","setSlideIndex","dataStickers","setDataStickers","find","stickers","tags","tab","scrollTo","getAllStickers","renderSliderItem","left","userSelect","timeout","slideWidth","align","Profile","networkStatus","withdrawalAmount","setPhoneNumber","setEditStatus","trim","vertical","filled","selected","qiwiAccount","GroupInfoStatistic","infoGroup","findGorup"],"mappings":"4GAAA,8EAkBMA,EAAO,SAAC,GAMP,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,gBAGA,OACE,kBAAC,IAAD,CACEC,MAAO,CACLC,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACED,MAAO,CACLE,aAAc,EACdC,UAAW,IAGb,kBAAC,IAAD,CACEH,MAAO,CACLE,aAAc,EACdC,UAAW,IAHf,mIASA,kBAAC,IAAD,CACEH,MAAO,CACLI,QAAS,OACTC,WAAY,SACZC,cAAe,QAIjB,kBAAC,IAAD,CACAN,MAAO,CACLO,SAAU,KAEV,kBAAC,IAAD,CACAC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAoBa,IACrCC,KAAK,OACLC,UAAUd,KAKZ,kBAAC,IAAD,CACCE,MAAO,CACNO,SAAU,GACVM,WAAY,KAGZ,kBAAC,IAAD,CACAC,KAAK,QACLC,QAAS,kBAAMhB,EAAgB,cAMrC,kBAAC,IAAD,CACEC,MAAO,CACLE,aAAc,EACdC,UAAW,KAGb,kBAAC,IAAD,CAAOa,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CAAEiB,gBAAiB,QAASC,MAAO,SAC1CH,QAAS,kBAAMhB,EAAgB,SAC/BoB,KAAK,WACLC,KAAK,KACLC,WAAS,GALX,2DAWF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErB,MAAO,CACLG,UAAW,GACXC,QAAS,OACTC,WAAY,SACZiB,eAAgB,SAChBhB,cAAe,SACfiB,WAAY,aAPhB,yQ,yIChFNC,E,MAAeC,EAAfD,WAEFE,EAAa,SAAC,GAA2D,EAAzDC,eAA0D,IAA1CC,EAAyC,EAAzCA,uBAAwBC,EAAiB,EAAjBA,WAAiB,EAC3CC,mBAAS,IADkC,mBACtEC,EADsE,KAC3DC,EAD2D,OAEvCF,mBAAS,GAF8B,mBAEtEG,EAFsE,KAEzDC,EAFyD,OAGnCJ,mBAAS,GAH0B,mBAGtEK,EAHsE,KAGvDC,EAHuD,OAI3CN,mBAAS,IAJkC,mBAItEO,EAJsE,KAI3DC,EAJ2D,OAKrCR,mBAAS,GAL4B,mBAKtES,EALsE,KAKxDC,EALwD,OAM7BV,mBAAS,GANoB,6BAY7E,SAASW,IACPjB,EAAW,oBAAoBkB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACrCC,QAAQC,IAAI,mBAAoBF,GAChCC,QAAQC,IAAI,oBAAqBF,EAAQZ,WAEzCC,EAAaW,EAAQZ,WACrBG,EAAeS,EAAQV,aACvBG,EAAiBO,EAAQR,eACzBG,EAAaK,EAAQN,WACrBG,EAAgBG,EAAQJ,iBAb5BO,qBAAU,WACRL,MACC,IAgCH,IAAMM,EAAgBV,EAAUW,KAAI,SAACC,EAAMC,GACzC,IAAMC,EAAY,oBAAsBF,EAAKG,OAE7C,OACE,kBAAC,IAAD,CACEC,IAAKH,EACLI,GAAIJ,EAAQ,EACZC,UAAWA,EACXI,OAAQN,EAAKM,OACbC,YAAaP,EAAKQ,aAClBC,UAAWT,EAAKS,UAChB7B,WAAYA,OAKlB,OACE,oCAMI,kBAAC,IAAD,CACE7B,MAAO,CACLC,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,mHASA,kBAAC,IAAD,CACEb,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAGbkB,IAIL,kBAAC,IAAD,CAAOf,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,yCAOW0B,EAPX,wBAUF,kBAAC,IAAD,CAAOvB,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,8CASA,kBAAC,IAAD,CACEb,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,4DAOeoB,EAPf,uBASA,kBAAC,IAAD,CACEjC,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,mEAOiBsB,EAPjB,uBAUA,kBAAC,IAAD,CACEnC,MAAO,CACLI,QAAS,OACTC,WAAY,SACZiB,eAAgB,QAChBhB,cAAe,QAGjB,kBAAC,IAAD,CACEc,KAAK,IACLL,QAAS0B,EACTzC,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,GACZI,gBAAiB,QACjBC,MAAO,QACPyC,aAAc,MACdC,MAAO,UAVX,yFAeA,kBAAC,IAAD,CACExC,KAAK,IACLL,QAASa,EACT5B,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,GACZI,gBAAiB,UACjBC,MAAO,QACPyC,aAAc,MACdC,MAAO,UAVX,gDAiBHb,EAAcc,OACbd,EAEA,kBAAC,IAAD,CACE/C,MAAO,CACLuB,WAAY,WACZV,WAAY,GACZV,UAAW,IAJf,sQ,qHClLRqB,E,MAAeC,EAAfD,WAEFsC,EAAmB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,WAAYnC,EAAiB,EAAjBA,WAAiB,EACDC,mBAAS,IADR,gCAErBA,mBAAS,IAFY,mBAEpDG,EAFoD,KAEvCC,EAFuC,OAGjBJ,mBAAS,GAHQ,mBAGpDK,EAHoD,KAGrCC,EAHqC,OAI/BN,mBAAS,IAJsB,mBAIpDmC,EAJoD,KAI5CC,EAJ4C,KAM3D,SAASzB,IACPjB,EAAW,qBAAqBkB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACtCT,EAAeS,EAAQV,aACvBG,EAAiBO,EAAQR,eACzB+B,EAAUvB,EAAQsB,WAItBnB,qBAAU,WACRL,MACC,IAmBH,IAAM0B,EAAeF,EAAOjB,KAAI,SAACC,EAAMC,GACrC,IAAMkB,EAAW,sBAAwBnB,EAAKoB,QAE9C,OACE,kBAAC,IAAD,CACEhB,IAAKH,EACLI,GAAIJ,EAAQ,EACZa,GAAIA,EACJK,SAAUA,EACVC,QAASpB,EAAKoB,QACdC,YAAarB,EAAKhB,YAClBsC,cAAetB,EAAKd,cACpBqC,KAAMvB,EAAKlB,UACX0C,MAAOxB,EAAKyB,cACZ7C,WAAYA,EACZQ,UAAWY,EAAKZ,UAChB2B,WAAYA,OAKlB,OACE,oCACIG,EAAaN,OAKb,kBAAC,IAAD,CACE7D,MAAO,CACLC,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,mJAWF,kBAAC,IAAD,CAAOG,UAAU,QACjB,kBAAC,IAAD,CACIhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJlB,8CASE,kBAAC,IAAD,CACEb,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,4DAOeoB,EAPf,uBASA,kBAAC,IAAD,CACEjC,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,mEAOiBsB,EAPjB,uBAUA,kBAAC,IAAD,CACEf,KAAK,IACLL,QAAS0B,EACTzC,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,GACZI,gBAAiB,QACjBC,MAAO,QACPyC,aAAc,MACdC,MAAO,UAVX,0FAiBF,kBAAC,IAAD,KAAMO,MArEZ,yBAAKQ,UAAU,WACb,kBAAC,IAAD,CAASvD,KAAK,QAAQpB,MAAO,CAAEG,UAAW,U,iCCpFpD,sDAEMyE,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACI,yBACIC,IAAKD,EACLjB,MAAO,GACPmB,OAAQ,GACR/E,MAAO,CACHG,UAAW,GACX6E,YAAa,GACb9E,aAAc,Q,0ICXvB,I,6DCOMuB,EAAb,iDACIwD,OAAS,KADb,oEAkBQ,OAXIxD,EAAcwD,QACdxD,EAAcwD,OAAOC,QAGzBzD,EAAcwD,OAASE,IAAG,8BAA+B,CACrDC,KAAM,mBACNC,MAAOC,SAASC,SAASC,OAAOC,MAAM,GACtCC,qBAAsB,EACtBC,WAAY,CAAC,eAGVlE,EAAcwD,SAlB7B,0EA0B4BW,GA1B5B,wFA0BwCC,EA1BxC,+BA0BiD,GACjCZ,EAAWxD,EAAXwD,OA3BhB,yCA8BmBa,QAAQC,QAAQ,CACnBC,OAAQ,SACRrD,QAAS,wGAhCzB,gCAmCe,IAAImD,SAAQ,SAACC,GAChBd,EAAOgB,KAAKL,EAAYC,GAAQ,SAACK,GAC7B,OAAOH,EAAQG,UArC/B,yGCLMC,EAAa,CAEjB,CACE7C,GAAI,EACJ8C,MAAO,GACPzB,UAAW,sBAEb,CACErB,GAAI,EACJ8C,MAAO,GACPzB,UAAW,oBAEb,CACErB,GAAI,EACJ8C,MAAO,GACPzB,UAAW,mBAEb,CACErB,GAAI,EACJ8C,MAAO,GACPzB,UAAW,iBAEb,CACErB,GAAI,EACJ8C,MAAO,GACPzB,UAAW,sB,qOCtBT0B,EAAa,SAAC,GAKb,IAJP/C,EAIM,EAJNA,GACA8C,EAGM,EAHNA,MACAE,EAEM,EAFNA,kBACA3B,EACM,EADNA,UAEE,OACE,kBAAC,IAAD,CACArB,GAAIA,EACJvC,QAAS,kBAAMuF,EAAkBF,EAAO9C,IACxCqB,UAAWA,K,QCVT4B,EAAkB,SAAC,GAalB,IAZLjD,EAYI,EAZJA,GACAkB,EAWI,EAXJA,KACA4B,EAUI,EAVJA,MACAvB,EASI,EATJA,KACA2B,EAQI,EARJA,SACAC,EAOI,EAPJA,WAGAH,GAII,EANJI,YAMI,EALJnD,OAKI,EAJJ+C,mBAEAK,GAEI,EAHJC,kBAGI,EAFJD,SAEI,EADJE,YAEA,OACE,kBAAC,IAAD,CACEC,OACE,kBAAC,IAAD,CAAKxD,GAAIA,EAAIvC,QAAS,kBAAMuF,EAAkBF,EAAO9C,KACnD,kBAAC,kBAAD,CAAiBuB,KAAMA,KAQ3B6B,YACE,oCACE,kBAAC,IAAD,CACE1G,MAAO,CACLI,QAAS,OACTC,WAAY,SACZC,cAAe,MACfgB,eAAgB,QAChBnB,UAAW,EACXD,aAAc,EACd6G,QAAS,IAGX,kBAAC,IAAD,CAAMC,KAAI,2BAAsBR,GAAYS,OAAO,UAChDR,IAGL,kBAAC,IAAD,CACErF,KAAK,IACLL,QAAS,kBAAM4F,EAAQP,EAAO9C,IAC9BtD,MAAO,CACLiB,gBAAiB,QACjBC,MAAO,QACPyC,aAAc,MACdC,MAAO,UAPX,qDAUawC,EAVb,aAeH5B,I,0BCzDD0C,G,MAAwB,SAAC,GAOxB,IANL/D,EAMI,EANJA,UACAI,EAKI,EALJA,OAEAC,GAGI,EAJJ2D,WAII,EAHJ3D,aACAE,EAEI,EAFJA,UACA7B,EACI,EADJA,WAEA,OACE,kBAAC,IAAD,CACEiF,OACEtD,EACE,kBAAC,IAAD,CAAMwD,KAAM7D,EAAW8D,OAAO,UAC5B,kBAAC,IAAD,CAAQnC,IAAKtB,KAGf,kBAAC,IAAD,CAAQsB,IAAK,yCAGjB4B,YACE,kBAAC,IAAD,CAAK1G,MAAO,CAAEa,WAAY,KAIxB,kBAAC,IAAD,CAAKb,MAAO,CAAEkB,MAAO,UAArB,KAAmCqC,EAAnC,wBAGJ6D,aACE,kBAAC,IAAD,CACEpH,MAAO,CACLG,UAAW,QACXC,QAAS,OACTkB,eAAgB,MAChBhB,cAAe,MACfD,WAAY,MACZgH,SAAU,SAGXxF,EAAW6B,KAIhB,kBAAC,IAAD,CACE1D,MAAO,CACLE,aAAc,MACdoH,YAAa,OACblH,QAAS,OACTkB,eAAgB,QAChBhB,cAAe,MACfD,WAAY,SACZgH,SAAU,SAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUvG,KAAK,WAEjB,kBAAC,IAAD,CAAKd,MAAO,CAAEG,UAAW,EAAGU,WAAY,IAAxC,kDCvDF0G,G,MAAY,SAAC,GASZ,IARLnD,EAQI,EARJA,SACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,YACAC,EAKI,EALJA,cACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MAEAT,GACI,EAFJD,GAEI,EADJC,YAEA,OACE,kBAAC,IAAD,CACE8C,OACE1C,EACE,kBAAC,IAAD,CAAM4C,KAAM5C,EAAU6C,OAAO,UAC3B,kBAAC,IAAD,CAAQnC,IAAKL,KAGf,kBAAC,IAAD,CAAQK,IAAK,yCAGjB4B,YACE,oCACE,kBAAC,IAAD,CACE1G,MAAO,CACLI,QAAS,OACTC,WAAY,QACZC,cAAe,SACfgB,eAAgB,SAChBnB,UAAW,EACXD,aAAc,EACdW,WAAY,GACZkG,QAAS,IAGX,kBAAC,IAAD,CAAK/G,MAAO,CAAEE,aAAc,IAA5B,4DACeoE,EADf,uBAGA,kBAAC,IAAD,CAAKtE,MAAO,CAAEE,aAAc,IAA5B,mEAAgDqE,EAAhD,wBAEF,kBAAC,IAAD,CACAvE,MAAO,CACLa,WAAY,KAGZ,kBAAC,IAAD,CACEyC,GAAIe,EACJjD,KAAK,IACLL,QAAS,kBAAMiD,EAAWK,IAE1BhD,WAAS,EACTrB,MAAO,CACLiB,gBAAiB,QACjBC,MAAO,QACPyC,aAAc,QATlB,mEAoBN,kBAAC,IAAD,CAAK3D,MAAO,CAAEG,UAAW,EAAGU,WAAY,KAAO2D,MClE/CgD,EAAe,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,sBACrB,OACE,kBAAC,IAAD,KACIA,EAAsB5D,OAWtB,kBAAC,IAAD,CACE7D,MAAO,CACLsH,YAAa,GACbI,aAAc,KAIfD,GAjBH,yBACEzH,MAAO,CACLI,QAAS,OACTC,WAAY,SACZC,cAAe,WAGjB,kBAAC,IAAD,CAASc,KAAK,QAAQpB,MAAO,CAAEG,UAAW,U,8ICjBpD,6f,qiBCgCQqB,EAAeC,IAAfD,WAEFyD,EAASxD,IAAckG,mBA6XdC,EA3XH,WAAM,MAEsB9F,oBAAS,GAF/B,mBAET+F,EAFS,KAEIC,EAFJ,OAGchG,oBAAS,GAHvB,mBAGTiG,EAHS,KAGAC,EAHA,OAIwBlG,oBAAS,GAJjC,mBAITmG,EAJS,KAIKC,EAJL,OAKsBpG,mBAAS,QAL/B,mBAKTqG,EALS,KAKIC,EALJ,OAMetG,mBAAS,MANxB,mBAMT+E,EANS,KAMIwB,EANJ,OAQYvG,mBAAS,MARrB,mBAQTwG,EARS,KAQDC,EARC,OAS0BzG,oBAAS,GATnC,gCAUgBA,mBAAS,OAVzB,mBAUT0G,EAVS,KAUCC,EAVD,OAWsB3G,mBAAS,MAX/B,mBAWT4G,EAXS,KAWIC,EAXJ,OAYkC7G,oBAAS,GAZ3C,mBAYT8G,EAZS,KAYUC,EAZV,OAasB/G,mBAAS,GAb/B,gCAc0BA,mBAAS,IAdnC,iCAeYA,mBAAS,KAfrB,qBAeTmC,GAfS,MAeDC,GAfC,SAgBsBpC,mBAAS,GAhB/B,qBAgBTgH,GAhBS,MAgBIC,GAhBJ,MA2KhB,SAASC,KAQPlB,GAAe,GACfe,GAAqB,GACrB5D,EAAOgE,OAkET,SAASC,GAAUC,GAAkC,IAA5BlI,EAA2B,uDAAT,QACrCuH,GACJC,EACE,kBAAC,IAAD,CACEW,SAAS,OACTC,OAAO,aACPC,QAAS,kBAAMb,EAAY,OAC3B3B,OACE,kBAAC,IAAD,CAAQ1F,KAAM,GAAIpB,MAAO,CAAEiB,oBACJ,UAApBA,EACC,kBAAC,IAAD,CAAYH,KAAK,OAAO8C,MAAO,GAAImB,OAAQ,KAE3C,kBAAC,IAAD,CAAcjE,KAAK,OAAO8C,MAAO,GAAImB,OAAQ,OAKlDoE,IA3OPrG,qBAAU,WACR,IAAM+C,EAAS,IAAI0D,gBAAgBjE,SAASC,SAASC,QAGnDK,EAAO2D,IAAI,yBAC4B,UAAvC3D,EAAO4D,IAAI,yBAEXzB,GAAW,GAGT,CAAC,UAAW,UAAU0B,UAAU7D,EAAO4D,IAAI,iBAC7CzB,GAAW,GACXE,GAAgB,IAGlBjD,EAAO0E,GAAG,gBAAgB,WAExBd,GAAqB,GACrBF,EAAe,SAGjB1D,EAAO0E,GAAG,cAAc,WACtB7B,GAAe,QAEhB,IAGHhF,qBAAU,WACR8G,IAAOC,WAAU,YAAiC,IAAD,IAA7BC,OAAUnJ,EAAmB,EAAnBA,KAAMoJ,EAAa,EAAbA,KAClC,GAAa,yBAATpJ,EAAiC,CACnC,IAAMqJ,EAAkB1E,SAAS2E,gBAAgB,UACjDD,EAAgBxJ,MAAQuJ,EAAKG,OAASH,EAAKG,OAAS,eACpD5E,SAAS6E,KAAKC,WAAWC,aAAaL,GAItCJ,IAAOU,KAAK,uBAAuB5H,MAAK,SAAC6H,GACvClC,EAAQkC,WAWb,IAEHzH,qBAAU,WACR0H,OAAOC,iBAAiB,YAAY,SAAC/J,GAAD,OAAOA,EAAEgK,sBAyG7CtC,EAAe,aAxGd,IA2CHtF,qBAAU,WAKRtB,EAAW,qBAAqBkB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAGtCuB,GAAUvB,EAAQsB,aANnB,IA+IH,IAAM0G,GAAO,SAACC,EAASC,EAAeC,GACpC,OACE,kBAAC,IAAD,CAAKnG,UAAU,cACb,kBAAC,IAAD,CAAKA,UAAU,OAAOiG,GACtB,kBAAC,IAAD,CAAKjG,UAAU,OACb,kBAAC,IAAD,CAAY5D,QAAS8J,GAAgBC,MAiB7C,IAAM/G,GAAK,SAACrD,GACV0H,EAAe1H,EAAEqK,cAAcC,QAAQC,IACvCrI,QAAQC,IAAI,QAGd,OACE,kBAAC,IAAD,CAAgBqI,WAAW,GACzB,kBAAC,IAAD,CACEC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYpK,QAASgD,GAAIqH,UAAQ,OAAOjC,KAAK,8CAC1B,SAAhBhB,EACC,kBAAC,IAAD,CAAgBrH,KAAK,UAErB,kBAAC,IAAD,OAKF,oCACGiH,EACC,kBAAC,IAAD,CACEhH,QAAS,kBAAMqH,EAAe,YAC9BgD,UAAQ,UACRjC,KAAK,8CAEY,YAAhBhB,EACC,kBAAC,IAAD,CAAyBrH,KAAK,UAE9B,kBAAC,IAAD,OAIJ,MAOV,kBAAC,IAAD,CAAMqH,YAAaA,EAAaG,OAAQA,EAAQ+C,MAAO3C,GACrD,kBAAC,IAAD,CACEpF,GAAG,OACHuD,YAAaA,EACb9C,GAAIA,GACJ4G,KAAMA,GACNzB,UAAWA,GACXV,SAAUA,EACVG,eAAgBA,EAChB/B,kBAxJV,SAA2BlG,EAAG0F,GAC5BuC,EAAe,MACfJ,EACE,oCACE,kBAAC,IAAD,CAAae,QAAS,kBAAMf,EAAU,QAIpC,kBAAC,IAAD,CAAiB+C,WAAS,EAACvK,QAAS,kBAoC5C,SAAkBL,EAAG0F,GACnBwD,IACG2B,YAAY,sBAAuB,CAClCC,OAAQ,QACRC,OAAQ,eACR5F,OAAQ,CACNtC,QAAS6C,EACTsF,SAAU,aAGbC,OAAM,SAACC,GACNhJ,QAAQC,IAAI+I,MA/CgCC,CAASnL,EAAG0F,KAAtD,8FAiJEO,QAzIV,SAAiBP,EAAO0F,GAEtBlC,IACG2B,YAAY,iCAAkC,CAC7CG,SAAU,YAEXhJ,MAAK,SAACqJ,GAELvB,OAAOwB,aAAaC,cAAc,CAChCC,UACE,gMACF3I,OAAQ6C,EAER+F,QAAQ,YAAD,OAActF,EAAYvD,GAA1B,YAAgCwI,KAEtCpJ,MAAK,SAAC0J,GACLxJ,QAAQC,IAAI,OAAQuJ,MAErBT,OAAM,SAACC,GACNhJ,QAAQC,IAAI,cAAe+I,SAGhCD,OAAM,SAAAU,GACL1D,EAAe,MACfO,GAAU,+TAAiE,WAkHvEN,kBAAmBA,EACnBI,gBAAiBA,GACjBsD,eAhEV,SAAwB5L,GACtBkJ,IACGU,KAAK,yBAA0B,IAC/B5H,MAAK,SAACqJ,GACLnJ,QAAQC,IAAI,sBAAuBkJ,MAEpCJ,OAAM,SAACU,GACNzJ,QAAQC,IAAI,sBAAuBwJ,OA0D/BxE,YAAaA,IAEf,kBAAC,IAAD,CACEvE,GAAG,UACHS,GAAIA,GACJ8C,YAAaA,EACbqC,UAAWA,GACXV,SAAUA,EACVI,kBAAmBA,EACnBI,gBAAiBA,GACjBf,aAAcA,EACdU,eAAgBA,EAChBd,YAAaA,EACb8C,KAAMA,GACN3G,WA9MV,SAAoBK,GAUlB0E,GAAe1E,GAKf+D,EAAe,yBAgMPvG,WAhOV,SAAoB0K,GAGlB,IAAIC,GAFJD,EAAO,IAAIE,KAAY,IAAPF,IAEFG,UACVF,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIG,EAAKJ,EAAKK,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKN,EAAKO,cAAgB,IAC1BD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKR,EAAKS,WACVD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAUV,EAAKW,aAGnB,OAFID,EAAU,KAAIA,EAAU,IAAMA,GAE5B,GAAN,OAAUT,EAAV,YAAgBG,EAAhB,YAAsBE,EAAtB,YAA4BE,EAA5B,YAAkCE,MAoN5B,kBAAC,IAAD,CACE3J,GAAG,uBACHS,GAAIA,GACJmF,UAAWA,GACXV,SAAUA,EACVI,kBAAmBA,EACnBI,gBAAiBA,GACjB2B,KAAMA,GACN7B,YAAaA,GACb7E,OAAQA,SC/YpB2F,IAAOU,KAAK,gBAEZ6C,IAASC,OAAO,kBAAC,EAAD,MAAS9H,SAAS+H,eAAe,U,wMCS3CC,EAAgB,SAAC,GAWjB,EAVJC,SAUK,IATL5E,EASI,EATJA,eACArF,EAQI,EARJA,GACAkB,EAOI,EAPJA,KACA4B,EAMI,EANJA,MACAvB,EAKI,EALJA,KACA2I,EAII,EAJJA,OACA9G,EAGI,EAHJA,YACA+G,EAEI,EAFJA,cACA9G,EACI,EADJA,QAEA,OACE,oCACE,kBAAC,IAAD,CAAW+B,YAAY,SACrB,kBAAC,IAAD,CACEpF,GAAG,QACHgG,QAAS,kBAAMX,EAAe,OAC9B+E,OAAO,kFACPC,QACE,oCACE,kBAAC,IAAD,CAEE7G,OACI,kBAAC,kBAAD,CAAiBjC,KAAMA,IAE3B6B,YACE,kBAAC,IAAD,CACE1G,MAAO,CACLI,QAAS,OACTC,WAAY,QACZC,cAAe,SACfgB,eAAgB,WAGlB,kBAAC,IAAD,CACEtB,MAAO,CACLE,aAAc,IAEhB8G,KAAM,6BACNC,OAAO,UAENuG,KAKP,kBAAC,IAAD,CACExN,MAAO,CACLI,QAAS,OACTC,WAAY,SACZC,cAAe,MACfgB,eAAgB,QAChBnB,UAAW,EACXD,aAAc,EACd6G,QAAS,IAGVvC,IAGL,kBAAC,IAAD,CACExE,MAAO,CACLI,QAAS,OACTC,WAAY,QACZiB,eAAgB,QAChBhB,cAAe,WAGjB,kBAAC,IAAD,SAAOoG,GACP,kBAAC,IAAD,CAAK1G,MAAO,CAAEE,aAAc,KAA5B,qHAC2BuN,IAG7B,kBAAC,IAAD,CACIzN,MAAO,CAAEiB,gBAAiB,QAASC,MAAO,SAC1CH,QAAS,kBAAM4F,EAAQP,EAAO9C,IAC9BnC,KAAK,WACLC,KAAK,KACLC,WAAS,GALb,4CA7DV,SCfEuM,EAAqB,SAAC,GAIrB,IAHLjF,EAGI,EAHJA,eACAhH,EAEI,EAFJA,eACAkM,EACI,EADJA,WAEA,OACE,oCACG,kBAAC,IAAD,CAAWnF,YAAY,kBACtB,kBAAC,IAAD,CACEpF,GAAG,iBACHgG,QAAS,kBAAMX,EAAe,OAO9B+E,OAAO,4EACPC,QACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,IAAI,oIACJC,YAAY,KACZtN,SAAU,SAACC,GAAD,OAAOiB,EAAejB,EAAG,qBACnCC,KAAK,WAKbqN,QAAS,CACP,CACEC,MAAO,6CACP9M,KAAM,WACNsK,OAAQ,WACNoC,UA7BZ,SCAIrM,EAAeC,IAAfD,WAEF0M,EAAO,SAAC,GAWP,IAVL5K,EAUI,EAVJA,GACAqH,EASI,EATJA,KACAnC,EAQI,EARJA,SACAG,EAOI,EAPJA,eAEAhC,GAKI,EANJC,kBAMI,EALJD,SACAiC,EAII,EAJJA,kBACAI,EAGI,EAHJA,gBACAsD,EAEI,EAFJA,eACAzE,EACI,EADJA,YACI,EAI8B/F,mBAAS,gBAJvC,mBAIGqM,EAJH,KAIcC,EAJd,OAKgCtM,mBAAS,GALzC,mBAKGuM,EALH,KAKeC,EALf,OAMoCxM,mBAAS,IAN7C,mBAMGyM,EANH,KAMiBC,EANjB,KAeJ,SAASlI,EAAkBF,EAAO9C,GAAI,MAYhCiL,EAAaE,MAAK,SAACC,GAAD,OAAcA,EAASpL,MAAQA,KAPnDkB,EALkC,EAKlCA,KACAgJ,EANkC,EAMlCA,OACA9G,EAPkC,EAOlCA,YACAiI,EARkC,EAQlCA,KAEA9J,EAVkC,EAUlCA,KACA4I,EAXkC,EAWlCA,cAGF7K,QAAQC,IAAI,0BAA2BuD,GACvCxD,QAAQC,IAAI,uBAAwBS,GAEpCqF,EACE,kBAAC,EAAD,CACErF,GAAIA,EACJkB,KAAMA,EACN4B,MAAOA,EACPvB,KAAMA,EACN2I,OAAQA,EACR9G,YAAaA,EACbiI,KAAMA,EACNlB,cAAeA,EACf9E,eAAgBA,EAChBhC,QAASA,KAKf,SAASiI,EAAIjO,GACXyN,EAAazN,GACb6J,OAAOqE,SAAS,EAAG,GAEnBC,EAAwB,iBAATnO,EAA0B,GAAK,CAACA,IAGjD,SAASmO,IAA2B,IAAZH,EAAW,uDAAJ,GAC7B,OAAOnN,EAAW,kBAAmB,CACnCmN,SACCjM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACT6L,EAAgB7L,GAEhBC,QAAQC,IAAI,yBAA0BF,GACtCC,QAAQC,IAAI,8BAA+B0L,MAnD/CzL,qBAAU,WACRgM,MACC,IAqDH,IAAMrH,EAAwB8G,EAAavL,KAAI,SAACC,EAAMC,GACpD,OACE,kBAAC,IAAD,CACEG,IAAKH,EACLI,GAAIL,EAAKK,GACTkB,KAAMvB,EAAKuB,KACXgC,SAAUvD,EAAKuD,SACfC,WAAYxD,EAAKwD,WACjBC,YAAazD,EAAKyD,YAClBN,MAAOnD,EAAKmD,MACZvB,KAAM5B,EAAK4B,KACXtB,OAAQN,EAAKM,OACb+C,kBAAmBA,EACnBK,QAASA,OAKToI,EAAmB5I,IAAWnD,KAAI,SAACC,EAAMC,GAC7C,OACE,kBAAC,IAAD,CACEG,IAAKH,EACLI,GAAIL,EAAKK,GACT8C,MAAOnD,EAAKmD,MACZzB,UAAW1B,EAAK0B,UAChB2B,kBAAmBA,OAKzB,OACE,kBAAC,IAAD,CAAOhD,GAAIA,EAAItC,WAAW,GACvB4H,EACC+B,EACE,yJACA3B,EACA,oGAGF,oCACInB,EAGA,oCACE,kBAAC,IAAD,CACEmH,KACE,kBAAC,IAAD,CACEhP,MAAO,CACLI,QAAS,OACTC,WAAY,SACZiB,eAAgB,SAChBhB,cAAe,QAGjB,kBAAC,IAAD,CACES,QAASuL,EACTtM,MAAO,CACLiB,gBAAiB,QACjB0C,aAAc,MACd9C,WAAY,OACZwG,SAAU,OACVtC,OAAQ,OACRnB,MAAO,QACP1C,MAAO,QACPd,QAAS,OACTC,WAAY,SACZiB,eAAgB,SAChB2N,WAAY,SAbhB,gGAmBA,kBAAC,IAAD,CACEjP,MAAO,CACLiB,gBAAiB,UACjB0C,aAAc,MACd9C,WAAY,OACZ+C,MAAO,OACPmB,OAAQ,OACR7D,MAAO,SAETC,KAAK,UACLC,KAAK,IAEL4F,KAAK,4BACLC,OAAO,UAbT,iDAqBN,oCACIQ,EAAsB5D,OAKtB,oCAEI,kBAAC,IAAD,CACEqL,QAAQ,OACRb,WAAYA,EACZ5N,SAAU,SAAC4N,GAAD,OAAgBC,EAAcD,IACxCc,WAAW,QACXC,MAAM,SACNpP,MAAO,CACL+E,OAAQ,QACR5E,UAAW,SAGZ4O,GAIL,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/O,MAAO,CACLI,QAAS,OACTC,WAAY,SACZiB,eAAgB,gBAChBhB,cAAe,MACfL,OAAQ,GACRgP,WAAY,SAKd,kBAAC,IAAD,CACElO,QAAS,kBAAM6N,EAAI,iBACnBjK,UACgB,iBAAdwJ,EACI,WACA,YALR,sBAUA,kBAAC,IAAD,CACEpN,QAAS,kBAAM6N,EAAI,UACnBjK,UACgB,UAAdwJ,EAAwB,WAAa,YAHzC,kCAgBA,kBAAC,IAAD,CACEpN,QAAS,kBAAM6N,EAAI,aACnBjK,UACgB,aAAdwJ,EAA2B,WAAa,YAH5C,oDAQA,kBAAC,IAAD,CACEpN,QAAS,kBAAM6N,EAAI,UACnBjK,UACgB,UAAdwJ,EAAwB,WAAa,YAHzC,wCAQA,kBAAC,IAAD,CACEpN,QAAS,kBAAM6N,EAAI,cACnBjK,UACgB,cAAdwJ,EAA4B,WAAa,YAH7C,gDAWJ,oCACiB,iBAAdA,EAEC,oCACI1G,EAAsB5D,OAKtB,kBAAC,IAAD,CACE7D,MAAO,CACLsH,YAAa,GACbI,aAAc,KAGfD,GAVH,yBAAK9C,UAAU,WACb,kBAAC,IAAD,CAASvD,KAAK,QAAQpB,MAAO,CAAEG,UAAW,QAchD,GAGa,UAAdgO,EACC,kBAAC,IAAD,CACE1G,sBAAuBA,IAGzB,GASa,aAAd0G,EACC,kBAAC,IAAD,CACE1G,sBAAuBA,IAGzB,GAGa,UAAd0G,EACC,kBAAC,IAAD,CACE1G,sBAAuBA,IAGzB,GAGa,cAAd0G,EACC,kBAAC,IAAD,CACE1G,sBAAuBA,IAGzB,GAGDe,IApJL,yBAAK7D,UAAU,WACb,kBAAC,IAAD,CAASvD,KAAK,QAAQpB,MAAO,CAAEG,UAAW,SAxDlDwK,EAAK,wHAA0B3B,EAAiB,6DCzHpDxH,EAAeC,IAAfD,WAEF6N,EAAU,SAAC,GAcV,IAbL/L,EAaI,EAbJA,GACAS,EAYI,EAZJA,GAEA4G,GAUI,EAXJ2E,cAWI,EAVJ3E,MACAnC,EASI,EATJA,SACAU,EAQI,EARJA,UACAN,EAOI,EAPJA,kBACAI,EAMI,EANJA,gBACAf,EAKI,EALJA,aACAU,EAII,EAJJA,eACAd,EAGI,EAHJA,YACA7D,EAEI,EAFJA,WACAnC,EACI,EADJA,WAGI0N,EAAmB,EAFnB,EAI8BzN,mBAAS,QAJvC,mBAIGqM,EAJH,KAIcC,EAJd,OAKkCtM,mBAAS,MAL3C,mBAKGlC,EALH,KAKgB4P,EALhB,OAMgC1N,oBAAS,GANzC,mBAMGhC,EANH,KAMe2P,EANf,KAYJ,SAASb,EAAIjO,GACX,OAAQA,GACN,IAAK,OAIL,IAAK,aAIL,IAAK,oBACHyN,EAAazN,GACb6J,OAAOqE,SAAS,EAAG,IAezB,SAASlN,EAAejB,EAAGC,GACzB,IAAMH,GAASE,EAAEuG,OAAOzG,MAAMkP,OAE9B,OAAQ/O,GACN,IAAK,mBACHiC,QAAQC,IAAIrC,GACZ+O,EAAmB/O,GAKzB,SAASqN,IACPrM,EAAW,aAAc,CACvB+B,OAAQgM,IACP7M,MAAK,YAA0B,IAAvBC,EAAsB,EAAtBA,QAASqD,EAAa,EAAbA,OAClB2C,EAAe,MACfO,EAAUvG,EAAoB,WAAXqD,EAAsB,MAAQ,YA/CrDlD,qBAAU,WAsBRtB,EAAW,kBAAkBkB,MAAK,YAA0B,IAAvBsD,EAAsB,EAAtBA,OAAQrD,EAAc,EAAdA,QAC5B,YAAXqD,EACFwJ,EAAe7M,GAEfuG,EAAUvG,EAAS,YAxBtB,IAkFH,OACE,kBAAC,IAAD,CAAOW,GAAIA,EAAItC,WAAW,GACxB,kBAAC,IAAD,uDAcC4H,EACC+B,EACE,yJACA3B,EACA,oGAGF,oCACInB,EAGA,oCACE,kBAAC,IAAD,CAAa8H,SAAS,MAAMC,QAAQ,GAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE7O,QAAS,kBAAM6N,EAAI,SACnBiB,SAAwB,SAAd1B,GAFZ,8CAMA,kBAAC,IAAD,CACEpN,QAAS,kBAAM6N,EAAI,eACnBiB,SAAwB,eAAd1B,GAFZ,gEAOClG,EACC,kBAAC,IAAD,CACElH,QAAS,kBAAM6N,EAAI,sBACnBiB,SAAwB,sBAAd1B,GAFZ,2DAOA,KAIN,oCACiB,SAAdA,EACC,kBAAC,IAAD,CACEnO,MAAO,CACLG,UAAW,KAGb,kBAAC,OAAD,CACEP,YAAaA,EACbC,oBAvFpB,SAA6Ba,GAC3B,IAAMF,EAAQE,EAAEuG,OAAOzG,MAAMkP,OAE7BF,EAAehP,GACfoC,QAAQC,IAAI,cAAejD,IAoFTE,WAAYA,EACZC,gBAlFI,SAACY,GACvB,OAAQA,GACN,IAAK,OACH8O,GAAc,GACd,MACF,IAAK,OACHA,GAAc,GACdjO,EAAW,oBAAqB,CAC9BsO,YAAalQ,IACZ8C,MAAK,YAA0B,IAAvBC,EAAsB,EAAtBA,QAASqD,EAAa,EAAbA,OAClBkD,EAAUvG,EAAoB,WAAXqD,EAAsB,MAAQ,iBA4EzC,GAGa,eAAdmI,EACC,kBAAC,IAAD,CACEnO,MAAO,CACLG,UAAW,KAGb,kBAAC,aAAD,CACEwB,eAAgBA,EAChBC,uBAlHpB,WACE+G,EACE,kBAAC,EAAD,CACEhH,eAAgBA,EAChBgH,eAAgBA,EAChBkF,WAAYA,MA8GEhM,WAAYA,KAIhB,GAGa,sBAAdsM,EACC,kBAAC,IAAD,CACEnO,MAAO,CACLG,UAAW,KAGb,kBAAC,mBAAD,CAAkB4D,GAAIA,EAAIC,WAAYA,EAAYnC,WAAYA,KAGhE,IAIH2G,GA7EHmC,EAAK,wHAA0B3B,EAAiB,6DCnIpDxH,EAAeC,IAAfD,WAEFuO,EAAqB,SAAC,GAUrB,IATLzM,EASI,EATJA,GACAS,EAQI,EARJA,GAMA+E,GAEI,EAPJ6B,KAOI,EANJnC,SAMI,EALJU,UAKI,EAJJN,kBAII,EAHJI,gBAGI,EAFJF,aACA7E,EACI,EADJA,OACI,EAC8BnC,mBAAS,IADvC,mBACGC,EADH,KACcC,EADd,OAEkCF,mBAAS,GAF3C,mBAEGG,EAFH,KAEgBC,EAFhB,OAGsCJ,mBAAS,GAH/C,mBAGGK,EAHH,KAGkBC,EAHlB,OAI8BN,mBAAS,IAJvC,mBAIGO,EAJH,KAIcC,EAJd,OAKoCR,mBAAS,GAL7C,mBAKGS,EALH,KAKiBC,EALjB,OAM4CV,mBAAS,GANrD,mBAQAkO,GARA,UAQY,IA+BhB,SAASnO,EAAW0K,GAGlB,IAAIC,GAFJD,EAAO,IAAIE,KAAY,IAAPF,IAEFG,UACVF,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIG,EAAKJ,EAAKK,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKN,EAAKO,cAAgB,IAC1BD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAKR,EAAKS,WACVD,EAAK,KAAIA,EAAK,IAAMA,GACxB,IAAIE,EAAUV,EAAKW,aAGnB,OAFID,EAAU,KAAIA,EAAU,IAAMA,GAE3BT,EAAK,IAAMG,EAAK,IAAME,EAAK,IAAME,EAAK,IAAME,EA3CrDnK,qBAAU,WAGR,IAAMmN,EAAYhM,EAAOwK,MAAK,SAACxL,GAAD,OAAUA,EAAKoB,UAAYyE,KAEzDkH,EAAYC,EACZrN,QAAQC,IAAI,+BAAgCmN,GAC5CpN,QAAQC,IAAI,+BAAgCmN,EAAU3N,WACtDC,EAAa0N,EAAU3N,WACvBL,EAAagO,EAAUjO,WACvBG,EAAe8N,EAAU/N,aACzBG,EAAiB4N,EAAU7N,eAC3BG,EAAa0N,EAAU3N,WACvBG,EAAgBwN,EAAUzN,gBACzB,IAgCH,IAAMQ,EAAgBV,EAAUW,KAAI,SAACC,EAAMC,GACzC,IAAMC,EAAY,oBAAsBF,EAAKG,OAE7C,OACE,kBAAC,IAAD,CACEC,IAAKH,EACLI,GAAIJ,EAAQ,EACZC,UAAWA,EACXI,OAAQN,EAAKM,OACbC,YAAaP,EAAKQ,aAClBC,UAAWT,EAAKS,UAChB7B,WAAYA,OAKlB,OACE,kBAAC,IAAD,CAAOyB,GAAIA,EAAItC,WAAW,GACxB,kBAAC,IAAD,CACEgO,KAAM,kBAAC,IAAD,CAAiBjO,QAASgD,EAAIqH,UAAQ,aAD9C,kHAMA,oCACE,kBAAC,IAAD,CACEpL,MAAO,CACLC,OAAQ,KAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,mHASA,kBAAC,IAAD,CACEb,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAGbkB,IAIL,kBAAC,IAAD,CAAOf,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,yCAOW0B,EAPX,wBAWF,kBAAC,IAAD,CAAOvB,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,8CASA,kBAAC,IAAD,CACEb,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,4DAOeoB,EAPf,uBASA,kBAAC,IAAD,CACEjC,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,KAJhB,mEAOiBsB,EAPjB,wBAuCF,kBAAC,IAAD,CAAOnB,UAAU,QACf,kBAAC,IAAD,CACEhB,MAAO,CACLI,QAAS,OACTC,WAAY,SACZiB,eAAgB,QAChBhB,cAAe,QAGjB,kBAAC,IAAD,CACEc,KAAK,IACLL,QApKlB,WACES,EAAW,oBAAoBkB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACrCC,QAAQC,IAAI,mBAAoBF,GAChCC,QAAQC,IAAI,oBAAqBF,EAAQZ,WAEzCC,EAAaW,EAAQZ,WACrBG,EAAeS,EAAQV,aACvBG,EAAiBO,EAAQR,eACzBG,EAAaK,EAAQN,WACrBG,EAAgBG,EAAQJ,kBA4JVvC,MAAO,CACLE,aAAc,EACdC,UAAW,EACXU,WAAY,GACZI,gBAAiB,QACjBC,MAAO,QACPyC,aAAc,MACdC,MAAO,UAVX,2FAiBHb,EAAcc,OACbd,EAEA,kBAAC,IAAD,CACE/C,MAAO,CACLuB,WAAY,WACZV,WAAY,GACZV,UAAW,IAJf,wQ","file":"static/js/main.fb22b320.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Div,\r\n  Link,\r\n  InfoRow,\r\n  Input,\r\n  FormLayoutGroup,\r\n  FormLayout,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28WriteOutline from \"@vkontakte/icons/dist/28/write_outline\";\r\n\r\nconst Form = ({\r\n  phoneNumber,\r\n  onChangePhoneNumber,\r\n  editStatus,\r\n  editPhoneNumber\r\n\r\n}) => {\r\n  return (\r\n    <Div\r\n      style={{\r\n        margin: 10,\r\n      }}\r\n    >\r\n      <Group>\r\n        <Cell>\r\n          <Div\r\n            style={{\r\n              marginBottom: 5,\r\n              marginTop: 5,\r\n            }}\r\n          >\r\n            <Div\r\n              style={{\r\n                marginBottom: 5,\r\n                marginTop: 5,\r\n              }}\r\n            >\r\n              Введите номер QIWI Кошелька\r\n            </Div>\r\n\r\n            <Div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n             \r\n              <Div \r\n              style={{\r\n                flexGrow: 10,\r\n              }}>\r\n                <Input\r\n                value={phoneNumber}\r\n                onChange={(e) => onChangePhoneNumber(e)}\r\n                type=\"text\"\r\n                disabled={editStatus ? false : true}\r\n                \r\n              ></Input>\r\n              </Div>\r\n              \r\n              <Div\r\n               style={{\r\n                flexGrow: 0.5,\r\n                marginLeft: 25\r\n              }}\r\n              > \r\n                <Icon28WriteOutline\r\n                fill=\"green\"\r\n                onClick={() => editPhoneNumber(\"edit\")}\r\n              />\r\n              </Div>\r\n            </Div>\r\n          </Div>\r\n\r\n          <Div\r\n            style={{\r\n              marginBottom: 5,\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            <Group separator=\"show\">\r\n              <Button\r\n                style={{ backgroundColor: \"green\", color: \"white\" }}\r\n                onClick={() => editPhoneNumber(\"save\")}\r\n                mode=\"commerce\"\r\n                size=\"xl\"\r\n                stretched\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </Group>\r\n\r\n            <Group>\r\n              <Div\r\n                style={{\r\n                  marginTop: 10,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  flexDirection: \"column\",\r\n                  whiteSpace: \"pre-wrap\"\r\n                }}\r\n              >\r\n                На указанный вами номер, будут приходить выплаты.\r\n              </Div>\r\n            </Group>\r\n          </Div>\r\n        </Cell>\r\n      </Group>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { Form };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Div,\r\n  Link,\r\n  InfoRow,\r\n  Input,\r\n  FormLayoutGroup,\r\n  FormLayout,\r\n  Button,\r\n  Spinner,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28WriteOutline from \"@vkontakte/icons/dist/28/write_outline\";\r\n\r\nimport { OperationsHistoryItem } from \"../items\";\r\nimport { dataHistory, SocketManager } from \"../helpers\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst Statistics = ({ onChangeAction, openModalWithdrawMoney, formatDate }) => {\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [amountToday, setAmountToday] = useState(0);\r\n  const [amountAllTime, setAmountAllTime] = useState(0);\r\n  const [donations, setDonations] = useState([]);\r\n  const [groupBalance, setGroupBalance] = useState(0);\r\n  const [withdrawalAmount, setWithdrawalAmount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getStats();\r\n  }, []);\r\n\r\n  function getStats() {\r\n    callMethod(\"getStatsForGroup\").then(({ message }) => {\r\n      console.log(\"getStatsForGroup\", message);\r\n      console.log(\"message.groupName\", message.groupName);\r\n\r\n      setGroupName(message.groupName);\r\n      setAmountToday(message.amountToday);\r\n      setAmountAllTime(message.amountAllTime);\r\n      setDonations(message.donations);\r\n      setGroupBalance(message.groupBalance);\r\n    });\r\n  }\r\n\r\n  // function formatDate(date) {\r\n  //   date = new Date(date * 1000);\r\n\r\n  //   let dd = date.getDate();\r\n  //   if (dd < 10) dd = \"0\" + dd;\r\n  //   let mm = date.getMonth() + 1;\r\n  //   if (mm < 10) mm = \"0\" + mm;\r\n  //   let yy = date.getFullYear() % 100;\r\n  //   if (yy < 10) yy = \"0\" + yy;\r\n  //   let hh = date.getHours();\r\n  //   if (hh < 10) hh = \"0\" + hh;\r\n  //   let minutes = date.getMinutes();\r\n  //   if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n  //   return dd + \".\" + mm + \".\" + yy + \" \" + hh + \":\" + minutes;\r\n  // }\r\n\r\n  const renderHistory = donations.map((item, index) => {\r\n    const senderUrl = \"https://vk.com/id\" + item.userId;\r\n\r\n    return (\r\n      <OperationsHistoryItem\r\n        key={index}\r\n        id={index + 1}\r\n        senderUrl={senderUrl}\r\n        amount={item.amount}\r\n        senderPhoto={item.userPhotoURL}\r\n        createdAt={item.createdAt}\r\n        formatDate={formatDate}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* {!renderHistory.length ? (\r\n        <div className=\"spinner\">\r\n          <Spinner size=\"large\" style={{ marginTop: 90 }} />\r\n        </div>\r\n      ) : ( */}\r\n        <Div\r\n          style={{\r\n            margin: 10,\r\n          }}\r\n        >\r\n          <Cell>\r\n            <Div>\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Статистика по группе:\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  {groupName}\r\n                </Div>\r\n              </Group>\r\n\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Баланс: {groupBalance} руб\r\n                </Div>\r\n              </Group>\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Прибыль\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За сегодня: {amountToday} руб\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За все время: {amountAllTime} руб\r\n                </Div>\r\n\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"start\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    size=\"m\"\r\n                    onClick={getStats}\r\n                    style={{\r\n                      marginBottom: 5,\r\n                      marginTop: 5,\r\n                      marginLeft: 15,\r\n                      backgroundColor: \"green\",\r\n                      color: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      width: \"160px\",\r\n                    }}\r\n                  >\r\n                    Обновить данные\r\n                  </Button>\r\n                  <Button\r\n                    size=\"m\"\r\n                    onClick={openModalWithdrawMoney}\r\n                    style={{\r\n                      marginBottom: 5,\r\n                      marginTop: 5,\r\n                      marginLeft: 15,\r\n                      backgroundColor: \"#3F8AE0\",\r\n                      color: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      width: \"160px\",\r\n                    }}\r\n                  >\r\n                    Вывести\r\n                  </Button>\r\n                </Div>\r\n              </Group>\r\n              {renderHistory.length ? (\r\n                renderHistory\r\n              ) : (\r\n                <Div\r\n                  style={{\r\n                    whiteSpace: \"pre-wrap\",\r\n                    marginLeft: 15,\r\n                    marginTop: 5,\r\n                  }}\r\n                >\r\n                  Здесь будет список покупок из вашего приложения\r\n                </Div>\r\n              )}\r\n            </Div>\r\n          </Cell>\r\n        </Div>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Statistics };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Div,\r\n  Link,\r\n  InfoRow,\r\n  Input,\r\n  FormLayoutGroup,\r\n  FormLayout,\r\n  Button,\r\n  Spinner\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28WriteOutline from \"@vkontakte/icons/dist/28/write_outline\";\r\n\r\nimport { GroupItem } from \"../items\";\r\nimport { dataGroups, SocketManager } from \"../helpers\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst StatisticsGroups = ({ go, getIdGroup, formatDate }) => {\r\n  const [dataOperationsHistory, setDataOperationsHistory] = useState([]);\r\n  const [amountToday, setAmountToday] = useState(0);\r\n  const [amountAllTime, setAmountAllTime] = useState(0);\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  function getStats() {\r\n    callMethod(\"getStatsForGroups\").then(({ message }) => {\r\n      setAmountToday(message.amountToday);\r\n      setAmountAllTime(message.amountAllTime);\r\n      setGroups(message.groups);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getStats();\r\n  }, []);\r\n\r\n  // function formatDate(date) {\r\n  //   date = new Date(date * 1000);\r\n\r\n  //   let dd = date.getDate();\r\n  //   if (dd < 10) dd = \"0\" + dd;\r\n  //   let mm = date.getMonth() + 1;\r\n  //   if (mm < 10) mm = \"0\" + mm;\r\n  //   let yy = date.getFullYear() % 100;\r\n  //   if (yy < 10) yy = \"0\" + yy;\r\n  //   let hh = date.getHours();\r\n  //   if (hh < 10) hh = \"0\" + hh;\r\n  //   let minutes = date.getMinutes();\r\n  //   if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n  //   return `${dd}.${mm}.${yy} ${hh}:${minutes}`;\r\n  // }\r\n\r\n  const renderGroups = groups.map((item, index) => {\r\n    const groupUrl = \"https://vk.com/club\" + item.groupId;\r\n\r\n    return (\r\n      <GroupItem\r\n        key={index}\r\n        id={index + 1}\r\n        go={go}\r\n        groupUrl={groupUrl}\r\n        groupId={item.groupId}\r\n        profitToday={item.amountToday}\r\n        profitAllTime={item.amountAllTime}\r\n        name={item.groupName}\r\n        photo={item.groupPhotoURL}\r\n        formatDate={formatDate}\r\n        donations={item.donations}\r\n        getIdGroup={getIdGroup}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!renderGroups.length ? (\r\n        <div className=\"spinner\">\r\n          <Spinner size=\"large\" style={{ marginTop: 90 }} />\r\n        </div>\r\n      ) : (\r\n        <Div\r\n          style={{\r\n            margin: 10,\r\n          }}\r\n        >\r\n          <Cell>\r\n            <Div>\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Статистика по всем группам:\r\n                </Div>\r\n              </Group>\r\n              \r\n              <Group separator=\"show\">\r\n              <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Прибыль\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За сегодня: {amountToday} руб\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За все время: {amountAllTime} руб\r\n                </Div>\r\n\r\n                <Button\r\n                  size=\"m\"\r\n                  onClick={getStats}\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                    backgroundColor: \"green\",\r\n                    color: \"white\",\r\n                    borderRadius: \"6px\",\r\n                    width: \"160px\",\r\n                  }}\r\n                >\r\n                  Обновить данные\r\n                </Button>\r\n              </Group>\r\n\r\n              <Div>{renderGroups}</Div>\r\n            </Div>\r\n          </Cell>\r\n        </Div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { StatisticsGroups };\r\n","import React from \"react\";\r\n\r\nconst StickerPackIcon = ({ icon }) => {\r\n    return (\r\n        <img\r\n            src={icon}\r\n            width={90}\r\n            height={90}\r\n            style={{\r\n                marginTop: 10,\r\n                marginRight: 20,\r\n                marginBottom: 10\r\n            }}\r\n        >\r\n        </img>\r\n    )\r\n};\r\n\r\nexport { StickerPackIcon };","export const requestMethod = 'https://one-digitalspace.ru/vipstickers/'; ","import io from \"socket.io-client\";\r\nimport { Socket } from 'socket.io-client';\r\n/**\r\n * @typedef {Object} Answer\r\n * @property {'success' | 'denied'} status - Статус ответа\r\n * @property {any} message - Сообщение ответа\r\n */\r\nexport class SocketManager {\r\n    socket = null;\r\n\r\n    /**\r\n     * @returns {Socket}\r\n     */\r\n    static createConnection() {\r\n        if (SocketManager.socket) {\r\n            SocketManager.socket.close();\r\n        }\r\n        \r\n        SocketManager.socket = io(\"https://one-digitalspace.ru\", {\r\n            path: \"/stickers/socket\",\r\n            query: document.location.search.slice(1),\r\n            reconnectionAttempts: 1,\r\n            transports: ['websocket']\r\n        });\r\n        \r\n        return SocketManager.socket;\r\n    }\r\n    \r\n    /**\r\n     * @param {string} methodName - Имя метода\r\n     * @param {object} params - Параметры метода\r\n     * @returns {Promise<Answer>}\r\n     */\r\n    static async callMethod(methodName, params = {}) {\r\n        const { socket } = SocketManager;\r\n\r\n        if (!socket)\r\n            return Promise.resolve({\r\n                status: 'denied',\r\n                message: 'Сокет не подключен'\r\n            });\r\n\r\n        return new Promise((resolve) => {\r\n            socket.emit(methodName, params, (answer) => {\r\n                return resolve(answer);\r\n            });\r\n        });\r\n    }\r\n}","\r\n\r\nconst dataSlider = [\r\n \r\n  {\r\n    id: 6,\r\n    price: 39,\r\n    className: \"iconSliderSimpsons\"\r\n  },\r\n  {\r\n    id: 7,\r\n    price: 99,\r\n    className: \"iconSliderNaruto\"\r\n  },\r\n  {\r\n    id: 4,\r\n    price: 39,\r\n    className: \"iconSliderJoker\"\r\n  },\r\n  {\r\n    id: 3,\r\n    price: 39,\r\n    className: \"iconSliderOno\"\r\n  },\r\n  {\r\n    id: 2,\r\n    price: 39,\r\n    className: \"iconSliderMatrix\"\r\n  },\r\n];\r\n\r\nexport { dataSlider };\r\n","import React from \"react\";\r\nimport { SimpleCell, Button, Div, Link } from \"@vkontakte/vkui\";\r\n\r\n// import { StickerPackIcon } from '../components'\r\n\r\nconst SliderItem = ({\r\nid,\r\nprice,\r\nopenModalStickers,\r\nclassName\r\n}) => {\r\n  return (\r\n    <Div\r\n    id={id}\r\n    onClick={() => openModalStickers(price, id)}\r\n    className={className}\r\n  >\r\n    \r\n  </Div>\r\n  );\r\n};\r\n\r\nexport { SliderItem };\r\n","import React from \"react\";\r\nimport { SimpleCell, Button, Div, Link } from \"@vkontakte/vkui\";\r\n\r\nimport { StickerPackIcon } from \"../components\";\r\n\r\nconst StickersAllItem = ({\r\n  id,\r\n  name,\r\n  price,\r\n  icon,\r\n  authorId,\r\n  authorName,\r\n  description,\r\n  amount,\r\n  openModalStickers,\r\n  openPaymentSystem,\r\n  qiwiPay,\r\n  fetchedUser,\r\n}) => {\r\n  return (\r\n    <SimpleCell\r\n      before={\r\n        <Div id={id} onClick={() => openModalStickers(price, id)}>\r\n          <StickerPackIcon icon={icon}></StickerPackIcon>\r\n        </Div>\r\n      }\r\n      // after={\r\n      //   <Link id={id} mode=\"tertiary\">\r\n      //     купить\r\n      //   </Link>\r\n      // }\r\n      description={\r\n        <>\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"start\",\r\n              marginTop: 5,\r\n              marginBottom: 5,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Link href={`https://vk.com/id${authorId}`} target=\"_blank\">\r\n              {authorName}\r\n            </Link>\r\n          </Div>\r\n          <Button\r\n            size=\"m\"\r\n            onClick={() => qiwiPay(price, id)}\r\n            style={{\r\n              backgroundColor: \"green\",\r\n              color: \"white\",\r\n              borderRadius: \"6px\",\r\n              width: \"120px\",\r\n            }}\r\n          >\r\n            Купить за {price} ₽\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      {name}\r\n    </SimpleCell>\r\n  );\r\n};\r\n\r\nexport { StickersAllItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\nimport Icon16Down from \"@vkontakte/icons/dist/16/down\";\r\nimport Icon16Up from \"@vkontakte/icons/dist/16/up\";\r\nimport { formatCoins } from \"../helpers\";\r\n\r\nconst OperationsHistoryItem = ({\r\n  senderUrl,\r\n  amount,\r\n  senderName,\r\n  senderPhoto,\r\n  createdAt,\r\n  formatDate,\r\n}) => {\r\n  return (\r\n    <Cell\r\n      before={\r\n        senderPhoto ? (\r\n          <Link href={senderUrl} target=\"_blank\">\r\n            <Avatar src={senderPhoto} />\r\n          </Link>\r\n        ) : (\r\n          <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n        )\r\n      }\r\n      description={\r\n        <Div style={{ marginLeft: 20 }}>\r\n          {/* <Div style={{ wordWrap: \"break-word\", marginBottom: 5 }}>\r\n            {senderName}\r\n          </Div> */}\r\n          <Div style={{ color: \"green\" }}>+ {amount} руб</Div>\r\n        </Div>\r\n      }\r\n      asideContent={\r\n        <Div\r\n          style={{\r\n            marginTop: \"-16px\",\r\n            display: \"flex\",\r\n            justifyContent: \"end\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"end\",\r\n            fontSize: \"10px\",\r\n          }}\r\n        >\r\n          {formatDate(createdAt)}\r\n        </Div>\r\n      }\r\n    >\r\n      <Div\r\n        style={{\r\n          marginBottom: \"5px\",\r\n          paddingLeft: \"15px\",\r\n          display: \"flex\",\r\n          justifyContent: \"start\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          fontSize: \"16px\",\r\n        }}\r\n      >\r\n        <Div>\r\n          <Icon16Up fill=\"green\" />\r\n        </Div>\r\n        <Div style={{ marginTop: 4, marginLeft: 4 }}>Покупка</Div>\r\n      </Div>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport { OperationsHistoryItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link, Button } from \"@vkontakte/vkui\";\r\nimport Icon16Up from \"@vkontakte/icons/dist/16/up\";\r\n\r\n\r\nimport { StatisticsTargetGroup } from \"../panels\";\r\n\r\nconst GroupItem = ({\r\n  groupUrl,\r\n  groupId,\r\n  profitToday,\r\n  profitAllTime,\r\n  name,\r\n  photo,\r\n  go,\r\n  getIdGroup,\r\n}) => {\r\n  return (\r\n    <Cell\r\n      before={\r\n        groupUrl ? (\r\n          <Link href={groupUrl} target=\"_blank\">\r\n            <Avatar src={photo} />\r\n          </Link>\r\n        ) : (\r\n          <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n        )\r\n      }\r\n      description={\r\n        <>\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"start\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              marginTop: 5,\r\n              marginBottom: 5,\r\n              marginLeft: 18,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <Div style={{ marginBottom: 8 }}>\r\n              За сегодня: {profitToday} руб\r\n            </Div>\r\n            <Div style={{ marginBottom: 8 }}>За все время: {profitAllTime} руб</Div>\r\n          </Div>\r\n          <Div \r\n          style={{\r\n            marginLeft: 18,\r\n          }}\r\n          >\r\n            <Button\r\n              id={groupId}\r\n              size=\"m\"\r\n              onClick={() => getIdGroup(groupId)}\r\n              // data-to=\"group-info-statistic\"\r\n              stretched\r\n              style={{\r\n                backgroundColor: \"green\",\r\n                color: \"white\",\r\n                borderRadius: \"6px\",\r\n                // width: \"120px\",\r\n                // marginLeft: 20,\r\n              }}\r\n            >\r\n              Статистика\r\n            </Button>\r\n          </Div>\r\n        </>\r\n      }\r\n    >\r\n      <Div style={{ marginTop: 4, marginLeft: 20 }}>{name}</Div>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nexport { GroupItem };\r\n","import React from \"react\";\r\nimport {\r\n  Div,\r\n  Spinner\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst StickersItem = ({renderDataStickersAll}) => {\r\n  return (\r\n    <Div>\r\n      {!renderDataStickersAll.length ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n        </div>\r\n      ) : (\r\n        <Div\r\n          style={{\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          \r\n          {renderDataStickersAll}\r\n        </Div>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { StickersItem };\r\n","export * from './Form';\r\nexport * from './Slider';\r\nexport * from './Statistics';\r\nexport * from './StatisticsGroups';\r\nexport * from './StickerPackIcon';\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  View,\n  ScreenSpinner,\n  ConfigProvider,\n  ActionSheetItem,\n  Avatar,\n  Snackbar,\n  CellButton,\n  Div,\n  Epic,\n  Tabbar,\n  TabbarItem,\n  ActionSheet,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Icon28Favorite from \"@vkontakte/icons/dist/28/favorite\";\nimport Icon28MarketOutline from \"@vkontakte/icons/dist/28/market_outline\";\nimport Icon28UserCircleOutline from \"@vkontakte/icons/dist/28/user_circle_outline\";\nimport Icon16Done from \"@vkontakte/icons/dist/16/done\";\nimport Icon16Cancel from \"@vkontakte/icons/dist/16/cancel\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/panels.sass\";\nimport \"./styles/components.sass\";\nimport \"./styles/icons.sass\";\nimport \"./styles/gifs.sass\";\n\nimport { Shop, Profile, GroupInfoStatistic } from \"./panels\";\n\nimport { SocketManager } from \"./helpers\";\nconst { callMethod } = SocketManager;\n\nconst socket = SocketManager.createConnection();\n\nconst App = () => {\n  // let targetGroup = 0;\n  const [isConnected, setIsConnected] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isSuperAdmin, setIsSuperAdmin] = useState(false);\n  const [activePanel, setActivePanel] = useState(\"shop\");\n  const [fetchedUser, setUser] = useState(null);\n  // const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n  const [popout, setPopout] = useState(null);\n  const [networkStatus, setNetworkStatus] = useState(false);\n  const [snackbar, setSnackbar] = useState(null);\n  const [activeModal, setActiveModal] = useState(null);\n  const [connectTwoDevices, setConnectTwoDevices] = useState(false);\n  const [amountToday, setAmountToday] = useState(0);\n  const [amountAllTime, setAmountAllTime] = useState(0);\n  const [groups, setGroups] = useState([]);\n  const [targetGroup, setTargetGroup] = useState(0);\n\n\n  // включение медиарекламы\n  // useEffect(() => {\n  //   bridge\n  //     .sendPromise(\"VKWebAppShowNativeAds\", {\n  //       ad_format: \"preloader\",\n  //     })\n  //     .then((res) => console.log(\"VKWebAppShowNativeAds RES\", res))\n  //     .catch((err) => console.log(\"VKWebAppShowNativeAds ERR\", err));\n  // }, []);\n\n  useEffect(() => {\n    const params = new URLSearchParams(document.location.search);\n\n    if (\n      params.has(\"vk_viewer_group_role\") &&\n      params.get(\"vk_viewer_group_role\") === \"admin\"\n    ) {\n      setIsAdmin(true);\n    }\n\n    if ([236908027, 73606509].includes(+params.get(\"vk_user_id\"))) {\n      setIsAdmin(true);\n      setIsSuperAdmin(true);\n    }\n\n    socket.on(\"multisession\", () => {\n      // console.log(\"multisession\");\n      setConnectTwoDevices(true);\n      setActiveModal(null);\n    });\n\n    socket.on(\"disconnect\", () => {\n      setIsConnected(false);\n    });\n  }, []);\n\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"bright_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n\n      function fetchData() {\n        bridge.send(\"VKWebAppGetUserInfo\").then((user) => {\n          setUser(user);\n          // console.log(user);\n          // window.userId = user.id;\n          // setPopout(null);\n        });\n      }\n      fetchData();\n  \n    \n\n    });\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"popstate\", (e) => e.preventDefault() & menu(e));\n  }, []);\n\n  // useEffect(() => {\n  //   bridge.subscribe((e) => {\n  //     switch (e.detail.type) {\n  //       // case \"VKWebAppUpdateConfig\":\n  //       //   console.log(\"e.detail.data.scheme\", e.detail.data.scheme);\n          \n  //       //   const schemeAttribute = document.createAttribute(\"scheme\");\n  //       //   schemeAttribute.value = e.detail.data.scheme\n  //       //     ? e.detail.data.scheme\n  //       //     : \"bright_light\";\n  //       //   document.body.attributes.setNamedItem(schemeAttribute);\n  //       //   break;\n  //       case \"VKWebAppViewHide\":\n  //         socket.close();\n  //         setIsConnected(true);\n\n  //         break;\n  //       case \"VKWebAppViewRestore\":\n  //         socket.open();\n  //         setIsConnected(false);\n  //         break;\n  //     }\n  //   });\n\n  //   function fetchData() {\n  //     bridge.send(\"VKWebAppGetUserInfo\").then((user) => {\n  //       setUser(user);\n  //       // console.log(user);\n  //       window.userId = user.id;\n  //       setPopout(null);\n  //     });\n  //   }\n  //   fetchData();\n\n  //   window.addEventListener(\"popstate\", (e) => e.preventDefault() & menu(e));\n  // }, []);\n\n \n\n  \n\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n  function getGroups() {\n    callMethod(\"getStatsForGroups\").then(({ message }) => {\n      // console.log(\"APP getStatsForGroups\", message);\n\n      setGroups(message.groups);\n    });\n  }\n\n  function formatDate(date) {\n    date = new Date(date * 1000);\n\n    let dd = date.getDate();\n    if (dd < 10) dd = \"0\" + dd;\n    let mm = date.getMonth() + 1;\n    if (mm < 10) mm = \"0\" + mm;\n    let yy = date.getFullYear() % 100;\n    if (yy < 10) yy = \"0\" + yy;\n    let hh = date.getHours();\n    if (hh < 10) hh = \"0\" + hh;\n    let minutes = date.getMinutes();\n    if (minutes < 10) minutes = \"0\" + minutes;\n\n    return `${dd}.${mm}.${yy} ${hh}:${minutes}`;\n  }\n\n  function getIdGroup(groupId) {\n    // const {\n    //   amountAllTime,\n    //   amountToday,\n    //   donations,\n    //   groupBalance,\n    //   groupId,\n    //   groupName,\n    //   groupPhotoURL,\n    // } = groups.find((groupId) => groupId.id === _groupId);\n    setTargetGroup(groupId);\n    // targetGroup = groupId;\n\n      // console.log(\"targetGroup\", targetGroup);\n    \n    setActivePanel(\"group-info-statistic\");\n  }\n\n  function socketReconnect() {\n    // console.log(\n    //   \"isConnected:\",\n    //   isConnected,\n    //   \"setConnectTwoDevices:\",\n    //   connectTwoDevices\n    // );\n\n    setIsConnected(true);\n    setConnectTwoDevices(false);\n    socket.open();\n  }\n\n  function menu(e) {\n    setActivePanel(\"shop\");\n  }\n\n  function openPaymentSystem(e, price) {\n    setActiveModal(null);\n    setPopout(\n      <>\n        <ActionSheet onClose={() => setPopout(null)}>\n          {/* <ActionSheetItem autoclose onClick={() => qiwiPay(e,price)}>\n              Оплатить через QIWI\n            </ActionSheetItem> */}\n          <ActionSheetItem autoclose onClick={() => payVkPay(e, price)}>\n            Оплатить через VK Pay\n          </ActionSheetItem>\n        </ActionSheet>\n      </>\n    );\n  }\n\n  function qiwiPay(price, packId) {\n\n    bridge\n      .sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\n        group_id: 194979339,\n      })\n      .then((res) => {\n        // console.log(res);\n        window.QiwiCheckout.createInvoice({\n          publicKey:\n            \"48e7qUxn9T7RyYE1MVZswX1FRSbE6iyCj2gCRwwF3Dnh5XrasNTx3BGPiMsyXQFNKQhvukniQG8RTVhYm3iP6eNeguoXyC99Aq22J8SZPKNgc2WqKx64qaPHePwqThccSrj3HPYcWtCAAb4y8zT5JD6kUUSyJK1sVaG2XrP9hXNzXzo5zVD2iWC9o81QD\",\n          amount: price,\n          // comment: `stickers ${window.userId} ${packId}`,\n          comment: `stickers ${fetchedUser.id} ${packId}`,\n        })\n          .then((response) => {\n            console.log(\"qiwi\", response);\n          })\n          .catch((error) => {\n            console.log(\"QIWI ERROR:\", error);\n          });\n      })\n      .catch(err => {\n        setActiveModal(null);\n        openAlert(\"Разрешите доступ к ЛС, туда мы отправим стикеры после покупки\", \"red\");\n      });\n  }\n\n  function payVkPay(e, price) {\n    bridge\n      .sendPromise(\"VKWebAppOpenPayForm\", {\n        app_id: 7448001,\n        action: \"pay-to-group\",\n        params: {\n          amount: +price,\n          group_id: 194979339,\n        },\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function openAlert(text, backgroundColor = \"green\") {\n    if (snackbar) return;\n    setSnackbar(\n      <Snackbar\n        duration=\"7000\"\n        layout=\"horizontal\"\n        onClose={() => setSnackbar(null)}\n        before={\n          <Avatar size={24} style={{ backgroundColor }}>\n            {backgroundColor === \"green\" ? (\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            ) : (\n              <Icon16Cancel fill=\"#fff\" width={14} height={14} />\n            )}\n          </Avatar>\n        }\n      >\n        {text}\n      </Snackbar>\n    );\n  }\n\n  const stub = (textDiv, retryFunction, textButton) => {\n    return (\n      <Div className=\"divSpinner\">\n        <Div className=\"div\">{textDiv}</Div>\n        <Div className=\"div\">\n          <CellButton onClick={retryFunction}>{textButton}</CellButton>\n        </Div>\n      </Div>\n    );\n  };\n\n  function AddToCommunity(e) {\n    bridge\n      .send(\"VKWebAppAddToCommunity\", {})\n      .then((res) => {\n        console.log(\" AddToCommunity res\", res);\n      })\n      .catch((err) => {\n        console.log(\" AddToCommunity err\", err);\n      });\n  }\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n    console.log(\"123\");\n  };\n\n  return (\n    <ConfigProvider isWebView={true}>\n      <Epic\n        tabbar={\n          <Tabbar>\n            <TabbarItem onClick={go} data-to=\"shop\" text=\"Стикеры\">\n              {activePanel === \"shop\" ? (\n                <Icon28Favorite fill=\"green\" />\n              ) : (\n                <Icon28Favorite />\n              )}\n            </TabbarItem>\n\n            {/* {fetchedUser && ( */}\n              <>\n                {isAdmin ? (\n                  <TabbarItem\n                    onClick={() => setActivePanel(\"profile\")}\n                    data-to=\"profile\"\n                    text=\"Профиль\"\n                  >\n                    {activePanel === \"profile\" ? (\n                      <Icon28UserCircleOutline fill=\"green\" />\n                    ) : (\n                      <Icon28UserCircleOutline />\n                    )}\n                  </TabbarItem>\n                ) : (\n                  \"\"\n                )}\n              </>\n             {/* )} */}\n          </Tabbar>\n        }\n      >\n        <View activePanel={activePanel} popout={popout} modal={activeModal}>\n          <Shop\n            id=\"shop\"\n            fetchedUser={fetchedUser}\n            go={go}\n            stub={stub}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            setActiveModal={setActiveModal}\n            openPaymentSystem={openPaymentSystem}\n            qiwiPay={qiwiPay}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            AddToCommunity={AddToCommunity}\n            isConnected={isConnected}\n          />\n          <Profile\n            id=\"profile\"\n            go={go}\n            fetchedUser={fetchedUser}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            isSuperAdmin={isSuperAdmin}\n            setActiveModal={setActiveModal}\n            isConnected={isConnected}\n            stub={stub}\n            getIdGroup={getIdGroup}\n            formatDate={formatDate}\n          />\n          <GroupInfoStatistic\n            id=\"group-info-statistic\"\n            go={go}\n            openAlert={openAlert}\n            snackbar={snackbar}\n            connectTwoDevices={connectTwoDevices}\n            socketReconnect={socketReconnect}\n            stub={stub}\n            targetGroup={targetGroup}\n            groups={groups}\n          />\n        </View>\n      </Epic>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n","import React from \"react\";\r\nimport {\r\n  ModalRoot,\r\n  ModalCard,\r\n  FormLayout,\r\n  Input,\r\n  Avatar,\r\n  InfoRow,\r\n  FormLayoutGroup,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  SimpleCell,\r\n  Link,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { StickerPackIcon } from '../components'\r\n\r\nconst ModalStickers = ({\r\n  targetId,\r\n  setActiveModal,\r\n  id,\r\n  name,\r\n  price,\r\n  icon,\r\n  author,\r\n  description,\r\n  stickersCount,\r\n  qiwiPay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ModalRoot activeModal=\"modal\">\r\n        <ModalCard\r\n          id=\"modal\"\r\n          onClose={() => setActiveModal(null)}\r\n          header=\"Набор стикеров\"\r\n          caption={\r\n            <>\r\n              <SimpleCell\r\n                // before={icon}\r\n                before={\r\n                    <StickerPackIcon icon={icon}></StickerPackIcon>\r\n                }\r\n                description={\r\n                  <Div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"start\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      style={{\r\n                        marginBottom: 10,\r\n                      }}\r\n                      href={\"https://vk.com/kirill_1131\"}\r\n                      target=\"_blank\"\r\n                    >\r\n                      {author}\r\n                    </Link>\r\n                  </Div>\r\n                }\r\n              >\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"start\",\r\n                    marginTop: 5,\r\n                    marginBottom: 5,\r\n                    padding: 0,\r\n                  }}\r\n                >\r\n                  {name}\r\n                </Div>\r\n              </SimpleCell>\r\n              <Div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"start\",\r\n                  justifyContent: \"start\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <Div> {description}</Div>\r\n                <Div style={{ marginBottom: 10 }}>\r\n                  Кол-во стикеров в паке: {stickersCount}\r\n                </Div>\r\n              </Div>\r\n              <Button\r\n                  style={{ backgroundColor: \"green\", color: \"white\" }}\r\n                  onClick={() => qiwiPay(price, id)}\r\n                  mode=\"commerce\"\r\n                  size=\"xl\"\r\n                  stretched\r\n                >\r\n                  Купить\r\n                </Button>\r\n            </>\r\n          }\r\n        ></ModalCard>\r\n      </ModalRoot>\r\n      ) )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ModalStickers };\r\n","import React from \"react\";\r\nimport {\r\n  ModalRoot,\r\n  ModalCard,\r\n  FormLayout,\r\n  Input,\r\n  Avatar,\r\n  InfoRow,\r\n  FormLayoutGroup,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  SimpleCell,\r\n  Link,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst ModalWithdrawMoney = ({\r\n  setActiveModal,\r\n  onChangeAction,\r\n  withdrawal\r\n}) => {\r\n  return (\r\n    <>\r\n       <ModalRoot activeModal=\"withdraw-money\">\r\n        <ModalCard\r\n          id=\"withdraw-money\"\r\n          onClose={() => setActiveModal(null)}\r\n          // icon={\r\n          //   <Avatar\r\n          //     size={72}\r\n          //     src=\"https://sun9-50.userapi.com/c857036/v857036390/aa9a0/i-iQZ4973FQ.jpg\"\r\n          //   />\r\n          // }\r\n          header=\"Вывод средств\"\r\n          caption={\r\n            <>\r\n              <FormLayout>\r\n                <Input\r\n                  top=\"Укажите сумму для вывода\"\r\n                  placeholder=\"50\"\r\n                  onChange={(e) => onChangeAction(e, 'withdrawalAmount')}\r\n                  type=\"text\"\r\n                />\r\n              </FormLayout>\r\n            </>\r\n          }\r\n          actions={[\r\n            {\r\n              title: \"Вывести\",\r\n              mode: \"commerce\",\r\n              action: () => {\r\n                withdrawal();\r\n              },\r\n            },\r\n          ]}\r\n        ></ModalCard>\r\n      </ModalRoot>\r\n      ) )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ModalWithdrawMoney };\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n  Link,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { StickersAllItem, SliderItem, StickersItem } from \"../items\";\r\nimport { SocketManager, dataSlider } from \"../helpers\";\r\nimport { ModalStickers } from \"../modals\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst Shop = ({\r\n  id,\r\n  stub,\r\n  snackbar,\r\n  setActiveModal,\r\n  openPaymentSystem,\r\n  qiwiPay,\r\n  connectTwoDevices,\r\n  socketReconnect,\r\n  AddToCommunity,\r\n  isConnected,\r\n}) => {\r\n  let targetId = 0;\r\n  // let dataStickers = [];\r\n\r\n  const [activeTab, setActiveTab] = useState(\"all-stickers\");\r\n  const [slideIndex, setSlideIndex] = useState(1);\r\n  const [dataStickers, setDataStickers] = useState([]);\r\n\r\n  // RENDERS\r\n  // const [renderDataStickersAll, setRenderDataStickersAll] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllStickers();\r\n  }, []);\r\n\r\n  function openModalStickers(price, id) {\r\n    // targetId = +e.currentTarget.id;\r\n\r\n    const {\r\n      // id,\r\n      name,\r\n      author,\r\n      description,\r\n      tags,\r\n      // price,\r\n      icon,\r\n      stickersCount,\r\n    } = dataStickers.find((stickers) => stickers.id === +id);\r\n\r\n    console.log(\"openModalStickers price\", price);\r\n    console.log(\"openModalStickers id\", id);\r\n\r\n    setActiveModal(\r\n      <ModalStickers\r\n        id={id}\r\n        name={name}\r\n        price={price}\r\n        icon={icon}\r\n        author={author}\r\n        description={description}\r\n        tags={tags}\r\n        stickersCount={stickersCount}\r\n        setActiveModal={setActiveModal}\r\n        qiwiPay={qiwiPay}\r\n      />\r\n    );\r\n  }\r\n\r\n  function tab(type) {\r\n    setActiveTab(type);\r\n    window.scrollTo(0, 0);\r\n\r\n    getAllStickers(type === \"all-stickers\" ? [] : [type]);\r\n  }\r\n\r\n  function getAllStickers(tags = []) {\r\n    return callMethod(\"getStickerPacks\", {\r\n      tags,\r\n    }).then(({ message }) => {\r\n      setDataStickers(message);\r\n      // dataStickers = message;\r\n      console.log(\"getAllStickers message\", message);\r\n      console.log(\"getAllStickers dataStickers\", dataStickers);\r\n    });\r\n  }\r\n\r\n  const renderDataStickersAll = dataStickers.map((item, index) => {\r\n    return (\r\n      <StickersAllItem\r\n        key={index}\r\n        id={item.id}\r\n        name={item.name}\r\n        authorId={item.authorId}\r\n        authorName={item.authorName}\r\n        description={item.description}\r\n        price={item.price}\r\n        icon={item.icon}\r\n        amount={item.amount}\r\n        openModalStickers={openModalStickers}\r\n        qiwiPay={qiwiPay}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderSliderItem = dataSlider.map((item, index) => {\r\n    return (\r\n      <SliderItem\r\n        key={index}\r\n        id={item.id}\r\n        price={item.price}\r\n        className={item.className}\r\n        openModalStickers={openModalStickers}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      {connectTwoDevices ? (\r\n        stub(\r\n          \"Вы подключились с 2 устройств \",\r\n          socketReconnect,\r\n          \"Переподключиться\"\r\n        )\r\n      ) : (\r\n        <>\r\n          {!isConnected ? (\r\n            stub(\"Проводятся тех. работы\", socketReconnect, \"Повторить\")\r\n          ) : (\r\n            <>\r\n              <PanelHeaderSimple\r\n                left={\r\n                  <Div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    <Div\r\n                      onClick={AddToCommunity}\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                        fontSize: \"14px\",\r\n                        height: \"28px\",\r\n                        width: \"140px\",\r\n                        color: \"white\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        userSelect: \"none\",\r\n                      }}\r\n                    >\r\n                      Добавить в группу\r\n                    </Div>\r\n\r\n                    <Button\r\n                      style={{\r\n                        backgroundColor: \"#3F8AE0\",\r\n                        borderRadius: \"9px\",\r\n                        marginLeft: \"10px\",\r\n                        width: \"80px\",\r\n                        height: \"28px\",\r\n                        color: \"white\"\r\n                      }}\r\n                      mode=\"primary\"\r\n                      size=\"m\"\r\n                      // onClick={AddToCommunity}\r\n                      href=\"https://vk.me/kirill_1131\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Авторам\r\n                    </Button>\r\n                  </Div>\r\n                }\r\n              ></PanelHeaderSimple>\r\n\r\n              <>\r\n                {!renderDataStickersAll.length ? (\r\n                  <div className=\"spinner\">\r\n                    <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                 \r\n                      <Gallery\r\n                        timeout=\"5000\"\r\n                        slideIndex={slideIndex}\r\n                        onChange={(slideIndex) => setSlideIndex(slideIndex)}\r\n                        slideWidth=\"360px\"\r\n                        align=\"center\"\r\n                        style={{\r\n                          height: \"190px\",\r\n                          marginTop: \"10px\",\r\n                        }}\r\n                      >\r\n                        {renderSliderItem}\r\n                      </Gallery>\r\n               \r\n\r\n                    <HorizontalScroll>\r\n                      <Div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-between\",\r\n                          flexDirection: \"row\",\r\n                          margin: 10,\r\n                          userSelect: \"none\",\r\n                          // marginRight: 20,\r\n                          // marginLeft: 20,\r\n                        }}\r\n                      >\r\n                        <Div\r\n                          onClick={() => tab(\"all-stickers\")}\r\n                          className={\r\n                            activeTab === \"all-stickers\"\r\n                              ? \"tabGreen\"\r\n                              : \"tabWhite\"\r\n                          }\r\n                        >\r\n                          Все\r\n                        </Div>\r\n                        <Div\r\n                          onClick={() => tab(\"anime\")}\r\n                          className={\r\n                            activeTab === \"anime\" ? \"tabGreen\" : \"tabWhite\"\r\n                          }\r\n                        >\r\n                          Аниме\r\n                        </Div>\r\n                        {/* <Div\r\n                      onClick={() => tab(\"games\")}\r\n                      className={\r\n                        activeTab === \"games\" ? \"tabGreen\" : \"tabWhite\"\r\n                      }\r\n                    >\r\n                      Игры\r\n                    </Div> */}\r\n                        <Div\r\n                          onClick={() => tab(\"cartoons\")}\r\n                          className={\r\n                            activeTab === \"cartoons\" ? \"tabGreen\" : \"tabWhite\"\r\n                          }\r\n                        >\r\n                          Мультики\r\n                        </Div>\r\n                        <Div\r\n                          onClick={() => tab(\"films\")}\r\n                          className={\r\n                            activeTab === \"films\" ? \"tabGreen\" : \"tabWhite\"\r\n                          }\r\n                        >\r\n                          Фильмы\r\n                        </Div>\r\n                        <Div\r\n                          onClick={() => tab(\"tv-series\")}\r\n                          className={\r\n                            activeTab === \"tv-series\" ? \"tabGreen\" : \"tabWhite\"\r\n                          }\r\n                        >\r\n                          Сериалы\r\n                        </Div>\r\n                      </Div>\r\n                    </HorizontalScroll>\r\n\r\n                    <>\r\n                      {activeTab === \"all-stickers\" ? (\r\n                        // <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n                        <>\r\n                          {!renderDataStickersAll.length ? (\r\n                            <div className=\"spinner\">\r\n                              <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n                            </div>\r\n                          ) : (\r\n                            <Div\r\n                              style={{\r\n                                paddingLeft: 10,\r\n                                paddingRight: 10,\r\n                              }}\r\n                            >\r\n                              {renderDataStickersAll}\r\n                            </Div>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {activeTab === \"anime\" ? (\r\n                        <StickersItem\r\n                          renderDataStickersAll={renderDataStickersAll}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {/* {activeTab === \"games\" ? (\r\n              <StickersItem renderDataStickersAll={renderDataStickersAll} />\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n\r\n                      {activeTab === \"cartoons\" ? (\r\n                        <StickersItem\r\n                          renderDataStickersAll={renderDataStickersAll}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {activeTab === \"films\" ? (\r\n                        <StickersItem\r\n                          renderDataStickersAll={renderDataStickersAll}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {activeTab === \"tv-series\" ? (\r\n                        <StickersItem\r\n                          renderDataStickersAll={renderDataStickersAll}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n\r\n                      {snackbar}\r\n                    </>\r\n                  </>\r\n                )}\r\n              </>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { Shop };\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { Form, Statistics, StatisticsGroups } from \"../components\";\r\nimport { OperationsHistoryItem } from \"../items\";\r\nimport { dataHistory, SocketManager } from \"../helpers\";\r\nimport { ModalWithdrawMoney } from \"../modals\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst Profile = ({\r\n  id,\r\n  go,\r\n  networkStatus,\r\n  stub,\r\n  snackbar,\r\n  openAlert,\r\n  connectTwoDevices,\r\n  socketReconnect,\r\n  isSuperAdmin,\r\n  setActiveModal,\r\n  isConnected,\r\n  getIdGroup,\r\n  formatDate\r\n}) => {\r\n  let dataStickersAll = [];\r\n  let withdrawalAmount = 0;\r\n\r\n  const [activeTab, setActiveTab] = useState(\"home\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"+7\");\r\n  const [editStatus, setEditStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getQiwiAccount();\r\n  }, []);\r\n\r\n  function tab(type) {\r\n    switch (type) {\r\n      case \"home\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"statistics\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n      case \"statistics-groups\":\r\n        setActiveTab(type);\r\n        window.scrollTo(0, 0);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function getQiwiAccount() {\r\n    callMethod(\"getQiwiAccount\").then(({ status, message }) => {\r\n      if (status === \"success\") {\r\n        setPhoneNumber(message);\r\n      } else {\r\n        openAlert(message, \"red\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function onChangeAction(e, type) {\r\n    const value = +e.target.value.trim();\r\n\r\n    switch (type) {\r\n      case \"withdrawalAmount\":\r\n        console.log(value);\r\n        withdrawalAmount = value;\r\n        break;\r\n    }\r\n  }\r\n\r\n  function withdrawal() {\r\n    callMethod(\"withdrawal\", {\r\n      amount: withdrawalAmount,\r\n    }).then(({ message, status }) => {\r\n      setActiveModal(null);\r\n      openAlert(message, status === \"denied\" ? \"red\" : \"green\");\r\n    });\r\n  }\r\n\r\n  function openModalWithdrawMoney() {\r\n    setActiveModal(\r\n      <ModalWithdrawMoney\r\n        onChangeAction={onChangeAction}\r\n        setActiveModal={setActiveModal}\r\n        withdrawal={withdrawal}\r\n      />\r\n    );\r\n  }\r\n\r\n  function onChangePhoneNumber(e) {\r\n    const value = e.target.value.trim();\r\n\r\n    setPhoneNumber(value);\r\n    console.log(\"phoneNumber\", phoneNumber);\r\n  }\r\n\r\n  const editPhoneNumber = (type) => {\r\n    switch (type) {\r\n      case \"edit\":\r\n        setEditStatus(true);\r\n        break;\r\n      case \"save\":\r\n        setEditStatus(false);\r\n        callMethod(\"changeQiwiAccount\", {\r\n          qiwiAccount: phoneNumber,\r\n        }).then(({ message, status }) => {\r\n          openAlert(message, status === \"denied\" ? \"red\" : \"green\");\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      <PanelHeaderSimple>VIP Стикеры</PanelHeaderSimple>\r\n\r\n      {/* {!isConnected ? (\r\n        stub(\"Проводятся тех. работы\", socketReconnect, \"Повторить\")\r\n      ) : (\r\n        <>\r\n          {connectTwoDevices ? (\r\n            stub(\r\n              \"Вы подключились с 2 устройств \",\r\n              socketReconnect,\r\n              \"Переподключиться\"\r\n            )\r\n          ) : ( */}\r\n\r\n      {connectTwoDevices ? (\r\n        stub(\r\n          \"Вы подключились с 2 устройств \",\r\n          socketReconnect,\r\n          \"Переподключиться\"\r\n        )\r\n      ) : (\r\n        <>\r\n          {!isConnected ? (\r\n            stub(\"Проводятся тех. работы\", socketReconnect, \"Повторить\")\r\n          ) : (\r\n            <>\r\n              <FixedLayout vertical=\"top\" filled={true}>\r\n                <Tabs>\r\n                  <TabsItem\r\n                    onClick={() => tab(\"home\")}\r\n                    selected={activeTab === \"home\"}\r\n                  >\r\n                    Профиль\r\n                  </TabsItem>\r\n                  <TabsItem\r\n                    onClick={() => tab(\"statistics\")}\r\n                    selected={activeTab === \"statistics\"}\r\n                  >\r\n                    Статистика\r\n                  </TabsItem>\r\n\r\n                  {isSuperAdmin ? (\r\n                    <TabsItem\r\n                      onClick={() => tab(\"statistics-groups\")}\r\n                      selected={activeTab === \"statistics-groups\"}\r\n                    >\r\n                      Все группы\r\n                    </TabsItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Tabs>\r\n              </FixedLayout>\r\n              <>\r\n                {activeTab === \"home\" ? (\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    <Form\r\n                      phoneNumber={phoneNumber}\r\n                      onChangePhoneNumber={onChangePhoneNumber}\r\n                      editStatus={editStatus}\r\n                      editPhoneNumber={editPhoneNumber}\r\n                    />\r\n                  </Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"statistics\" ? (\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    <Statistics\r\n                      onChangeAction={onChangeAction}\r\n                      openModalWithdrawMoney={openModalWithdrawMoney}\r\n                      formatDate={formatDate}\r\n                    />\r\n                  </Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {activeTab === \"statistics-groups\" ? (\r\n                  <Div\r\n                    style={{\r\n                      marginTop: 55,\r\n                    }}\r\n                  >\r\n                    <StatisticsGroups go={go} getIdGroup={getIdGroup} formatDate={formatDate}/>\r\n                  </Div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n\r\n              {snackbar}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { Profile };\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderSimple,\r\n  PanelHeaderBack,\r\n  FixedLayout,\r\n  Tabs,\r\n  TabsItem,\r\n  Div,\r\n  Spinner,\r\n  HorizontalScroll,\r\n  Group,\r\n  Gallery,\r\n  Header,\r\n  Cell,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { Statistics } from \"../components\";\r\nimport { OperationsHistoryItem } from \"../items\";\r\nimport { SocketManager } from \"../helpers\";\r\n\r\nconst { callMethod } = SocketManager;\r\n\r\nconst GroupInfoStatistic = ({\r\n  id,\r\n  go,\r\n  stub,\r\n  snackbar,\r\n  openAlert,\r\n  connectTwoDevices,\r\n  socketReconnect,\r\n  targetGroup,\r\n  groups,\r\n}) => {\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [amountToday, setAmountToday] = useState(0);\r\n  const [amountAllTime, setAmountAllTime] = useState(0);\r\n  const [donations, setDonations] = useState([]);\r\n  const [groupBalance, setGroupBalance] = useState(0);\r\n  const [withdrawalAmount, setWithdrawalAmount] = useState(0);\r\n  // const [infoGroup, setInfoGroup] = useState({});\r\n  let infoGroup = {};\r\n\r\n  useEffect(() => {\r\n    // getStats();\r\n    // console.log(\"targetGroup\", targetGroup);\r\n    const findGorup = groups.find((item) => item.groupId === targetGroup);\r\n    //  setInfoGroup(findGorup);\r\n    infoGroup = findGorup;\r\n    console.log(\"GroupInfoStatistic infoGroup\", infoGroup);\r\n    console.log(\"GroupInfoStatistic infoGroup\", infoGroup.donations);\r\n    setDonations(infoGroup.donations);\r\n    setGroupName(infoGroup.groupName);\r\n    setAmountToday(infoGroup.amountToday);\r\n    setAmountAllTime(infoGroup.amountAllTime);\r\n    setDonations(infoGroup.donations);\r\n    setGroupBalance(infoGroup.groupBalance);\r\n  }, []);\r\n\r\n  function getStats() {\r\n    callMethod(\"getStatsForGroup\").then(({ message }) => {\r\n      console.log(\"getStatsForGroup\", message);\r\n      console.log(\"message.groupName\", message.groupName);\r\n\r\n      setGroupName(message.groupName);\r\n      setAmountToday(message.amountToday);\r\n      setAmountAllTime(message.amountAllTime);\r\n      setDonations(message.donations);\r\n      setGroupBalance(message.groupBalance);\r\n    });\r\n  }\r\n\r\n  function formatDate(date) {\r\n    date = new Date(date * 1000);\r\n\r\n    let dd = date.getDate();\r\n    if (dd < 10) dd = \"0\" + dd;\r\n    let mm = date.getMonth() + 1;\r\n    if (mm < 10) mm = \"0\" + mm;\r\n    let yy = date.getFullYear() % 100;\r\n    if (yy < 10) yy = \"0\" + yy;\r\n    let hh = date.getHours();\r\n    if (hh < 10) hh = \"0\" + hh;\r\n    let minutes = date.getMinutes();\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    return dd + \".\" + mm + \".\" + yy + \" \" + hh + \":\" + minutes;\r\n  }\r\n\r\n  const renderHistory = donations.map((item, index) => {\r\n    const senderUrl = \"https://vk.com/id\" + item.userId;\r\n\r\n    return (\r\n      <OperationsHistoryItem\r\n        key={index}\r\n        id={index + 1}\r\n        senderUrl={senderUrl}\r\n        amount={item.amount}\r\n        senderPhoto={item.userPhotoURL}\r\n        createdAt={item.createdAt}\r\n        formatDate={formatDate}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Panel id={id} separator={false}>\r\n      <PanelHeaderSimple\r\n        left={<PanelHeaderBack onClick={go} data-to=\"profile\" />}\r\n      >\r\n        Статистика по группе\r\n      </PanelHeaderSimple>\r\n\r\n      <>\r\n        <Div\r\n          style={{\r\n            margin: 10,\r\n          }}\r\n        >\r\n          <Cell>\r\n            <Div>\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Статистика по группе:\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  {groupName}\r\n                </Div>\r\n              </Group>\r\n\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Баланс: {groupBalance} руб\r\n                </Div>\r\n              </Group>\r\n\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Прибыль\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За сегодня: {amountToday} руб\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За все время: {amountAllTime} руб\r\n                </Div>\r\n              </Group>\r\n              {/* <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  Выводы\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За сегодня: {amountToday} руб\r\n                </Div>\r\n                <Div\r\n                  style={{\r\n                    marginBottom: 5,\r\n                    marginTop: 5,\r\n                    marginLeft: 15,\r\n                  }}\r\n                >\r\n                  За все время: {amountAllTime} руб\r\n                </Div>\r\n              </Group> */}\r\n              <Group separator=\"show\">\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"start\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    size=\"m\"\r\n                    onClick={getStats}\r\n                    style={{\r\n                      marginBottom: 5,\r\n                      marginTop: 5,\r\n                      marginLeft: 15,\r\n                      backgroundColor: \"green\",\r\n                      color: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      width: \"160px\",\r\n                    }}\r\n                  >\r\n                    Обновить данные\r\n                  </Button>\r\n                </Div>\r\n              </Group>\r\n              {renderHistory.length ? (\r\n                renderHistory\r\n              ) : (\r\n                <Div\r\n                  style={{\r\n                    whiteSpace: \"pre-wrap\",\r\n                    marginLeft: 15,\r\n                    marginTop: 5,\r\n                  }}\r\n                >\r\n                  Здесь будет список покупок из вашего приложения\r\n                </Div>\r\n              )}\r\n            </Div>\r\n          </Cell>\r\n        </Div>\r\n      </>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { GroupInfoStatistic };\r\n"],"sourceRoot":""}